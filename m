Return-Path: <linux-arch-owner@vger.kernel.org>
X-Original-To: lists+linux-arch@lfdr.de
Delivered-To: lists+linux-arch@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id AD6C7F690B
	for <lists+linux-arch@lfdr.de>; Sun, 10 Nov 2019 14:10:09 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726390AbfKJNKI (ORCPT <rfc822;lists+linux-arch@lfdr.de>);
        Sun, 10 Nov 2019 08:10:08 -0500
Received: from mail-eopbgr1300075.outbound.protection.outlook.com ([40.107.130.75]:41036
        "EHLO APC01-HK2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726301AbfKJNKI (ORCPT <rfc822;linux-arch@vger.kernel.org>);
        Sun, 10 Nov 2019 08:10:08 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=U1UlJFiFJjxvrdX6/PD+T/rTvqx4BcYwhmbXl59M5C3ktsIs7t8fPqXxkrTbRu5Q9P6nrwBxuaEwCND8CGN8Eh6enSrDGcpa5Yn48oBY+GcadbmYtLzbIUYoZxlB89D1o7fHOyM3e4iN/yhdWwbzAPtBbdW9QQYrRJEcJbtXFAqIBzpHYK9Q27Ym5tsXLdV6Z69EAEbrCOSSrAlJOFCdtc3VRBHi3zWb8wpSsA4hixA0JBhc/5IJY08aOOzt/aFeQO+4pye2TAf+FU3sFkdh/QCUHcqJG4eIM7P4QxHyy8LMAHys9Ly97ur7p3lF6t8UZMDcb/oXjTunFP9+plNlHw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nC5YN319PQfG4pNEf62g56QedULKREBf8efOIx0s5d8=;
 b=XTx1z8qmZRWG+dQFg7ayf2m/4NIke/u74DVedTU72dqz8pwB4hwlkCvBVxhTFjE5C2jrTcSikjcWGxCYQ7K7NVYSW+K9FtFJlWBgY2XhzhYHtbViYFpVnK4IUhyGhZnxTsmMuM/FGSeG9fx1tbtaJrmVLtWrfOiGzDs+2Kd8JCYbs4qxVSscla3KUSwhN7G3wh7/sNAapHp2YifxnJAVUXsK2IQEgDUrScGaITOR6sx5avwIFl5Btjf0I55V2HZrb54C9ITXYWVyv9PL5XirEvzcIva/rLqpvTIxt9yMXRLfOLXVarZM+NUkl1nZoUmr+PrCMYcWhoAcnt8v6vyAnQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=teo-en-ming-corp.com; dmarc=pass action=none
 header.from=teo-en-ming-corp.com; dkim=pass header.d=teo-en-ming-corp.com;
 arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=teoenmingcorp.onmicrosoft.com; s=selector2-teoenmingcorp-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nC5YN319PQfG4pNEf62g56QedULKREBf8efOIx0s5d8=;
 b=KhqkRlt42/Xnw3+ydf/F9eZAyXeK6EayBQH0zocOuh2rL1oYrXKxpJ96BSTKq0H/ENtWr3w3MwbhFd6PJ750H6ntsJrYTD5OUyXMjY4jJhpBfxpAZ7rpQc0UXEveSJtUSubzM48IteFfgxY2s2mkcwsAferTKCndXUvkTSssapY=
Received: from SG2PR01MB2141.apcprd01.prod.exchangelabs.com (10.170.143.19) by
 SG2PR01MB2170.apcprd01.prod.exchangelabs.com (20.177.80.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2430.23; Sun, 10 Nov 2019 13:09:54 +0000
Received: from SG2PR01MB2141.apcprd01.prod.exchangelabs.com
 ([fe80::49d4:fc70:bde2:c3a]) by SG2PR01MB2141.apcprd01.prod.exchangelabs.com
 ([fe80::49d4:fc70:bde2:c3a%2]) with mapi id 15.20.2430.023; Sun, 10 Nov 2019
 13:09:54 +0000
From:   Turritopsis Dohrnii Teo En Ming <ceo@teo-en-ming-corp.com>
To:     "linux-arch@vger.kernel.org" <linux-arch@vger.kernel.org>
CC:     Turritopsis Dohrnii Teo En Ming <ceo@teo-en-ming-corp.com>
Subject: Autobiography of Singaporean Targeted Individual Mr. Turritopsis
 Dohrnii Teo En Ming (Very First Draft, Lots More to Add in Future)
Thread-Topic: Autobiography of Singaporean Targeted Individual Mr. Turritopsis
 Dohrnii Teo En Ming (Very First Draft, Lots More to Add in Future)
Thread-Index: AdWXyBdBXhAV//uFQ2GeEFcv46pdJw==
Date:   Sun, 10 Nov 2019 13:09:54 +0000
Message-ID: <SG2PR01MB2141797086193AB3B993307B87750@SG2PR01MB2141.apcprd01.prod.exchangelabs.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=ceo@teo-en-ming-corp.com; 
x-originating-ip: [118.189.211.120]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 055c9ad4-0242-4f85-2688-08d765df4730
x-ms-traffictypediagnostic: SG2PR01MB2170:
x-ms-exchange-purlcount: 40
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <SG2PR01MB21705148902668DA4F19539487750@SG2PR01MB2170.apcprd01.prod.exchangelabs.com>
x-ms-oob-tlc-oobclassifiers: OLM:2;
x-forefront-prvs: 02176E2458
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(346002)(39830400003)(396003)(376002)(136003)(366004)(209900001)(189003)(199004)(26005)(256004)(966005)(107886003)(6116002)(6436002)(6916009)(102836004)(14444005)(99286004)(25786009)(3846002)(486006)(71190400001)(71200400001)(74316002)(305945005)(4326008)(86362001)(81166006)(81156014)(536464003)(14454004)(555904003)(8936002)(8676002)(7736002)(316002)(508600001)(2906002)(30864003)(6306002)(66574012)(52536014)(33656002)(476003)(9686003)(2501003)(55016002)(66946007)(5660300002)(5640700003)(7696005)(186003)(66066001)(6506007)(66556008)(66476007)(16799955002)(66446008)(64756008)(76116006)(2351001)(482034009)(98824002)(569006);DIR:OUT;SFP:1101;SCL:1;SRVR:SG2PR01MB2170;H:SG2PR01MB2141.apcprd01.prod.exchangelabs.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
received-spf: None (protection.outlook.com: teo-en-ming-corp.com does not
 designate permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: cRDVHNlMXoVwdXaFg44dApyogWrt+8J8Yj8G+p4Cq66nSKjD2M8tUieJMuIlAGM5UjjqrvQnZGV0SjfQS+AI/hCl5akfjyTONmolTfOuXArjYl92hPeLQWcIBqdBDQQL7N/0XyLCQk24byQdhz2tplG0bYpyqck211jj3qf4xWNPsSfWLxRyyaCZyLF9L/3gHG3RNf8yPgN8M9rVyuOTmNVS6oLaHoxzDpenGU8BtUW6bPGhwaQjlVC4sBlepfHH0Zh/E03+1jYe3fYw42PlxS8AopJkC4+C8zQHY42OaFrrk0z0mf/xuui/8PWgjmC+3h1t+AAtiqaJrZ7e+gTzbUVlwUd5411IHEADu4BUFgmcmGTibKBJRapysjSAx0vJogHZQiAcTun1udr6Xbktwc1gUwN0NSpzuSS6MrRdYHGRNpYgPB3KCKk8W5xZkt8UDIeC7DX3QjSbQDFyfN3Ad+l4sDA71YP9A7w1KfyePK4=
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
MIME-Version: 1.0
X-OriginatorOrg: teo-en-ming-corp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 055c9ad4-0242-4f85-2688-08d765df4730
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Nov 2019 13:09:54.0965
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 23b3f6ae-c453-4b93-aec9-f17508e5885c
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: Ic+ygJx3znVwyfm6WAhniqfEtEIIwsqw1aHQzN4iuOko9HTlEyinuxZLQppiwkYxWzRKUSeMIV20ks/F9xa+6Q0NKPgzzJ/EXHvW/PN7qMQ=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SG2PR01MB2170
Sender: linux-arch-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-arch.vger.kernel.org>
X-Mailing-List: linux-arch@vger.kernel.org

UHJpbWFyeSBTdWJqZWN0OiBBdXRvYmlvZ3JhcGh5IG9mIFNpbmdhcG9yZWFuIFRhcmdldGVkIElu
ZGl2aWR1YWwgTXIuIFR1cnJpdG9wc2lzIERvaHJuaWkgVGVvIEVuIE1pbmcgKFZlcnkgRmlyc3Qg
RHJhZnQsIExvdHMgTW9yZSB0byBBZGQgaW4gRnV0dXJlKQ0KDQpTZWNvbmRhcnkgU3ViamVjdDog
WWVhciAyMDE5IHRvIFllYXIgMjAwMDAwMDAwMDAwMDE5OiBUb3AgMTUgQmxhY2tsaXN0ZWQgUGhv
dG9ncmFwaGVycyBpbiBTaW5nYXBvcmUNCg0KRklSU1QgRFJBRlQgMTEgTk9WRU1CRVIgMjAxOSAo
MTEuMTEuMjAxOSkNCg0KTXkgbmFtZSBpcyBNci4gVHVycml0b3BzaXMgRG9ocm5paSBUZW8gRW4g
TWluZy4gVGhlIGZ1bGwgbGVnYWwgbmFtZSBvbiBteSBTaW5nYXBvcmUgTlJJQyBpZGVudGl0eSBj
YXJkIChnb3Zlcm5tZW50IGlzc3VlZCBJRCkgaXMgVHVycml0b3BzaXMgRG9ocm5paSBUZW8gRW4g
TWluZyAoWmhhbmcgRW5taW5nKSDlvKDmganpuKMgQCBUaW1lIFRyYXZlbGxlci4gQW55dGhpbmcg
YWZ0ZXIgdGhlICJAIiBzeW1ib2wgaXMgYW4gYWxpYXMuIEkgYW0gYSBTaW5nYXBvcmVhbiBUYXJn
ZXRlZCBJbmRpdmlkdWFsIChUSSkgbGl2aW5nIGluIFNpbmdhcG9yZS4gSSB3YXMgYm9ybiBpbiBL
YW5kYW5nIEtlcmJhdSBIb3NwaXRhbCBpbiBTaW5nYXBvcmUgaW4gMTk3OCAoYWNjb3JkaW5nIHRv
IG15IGJpcnRoIGNlcnRpZmljYXRlKS4gVGhhdCBtYWtlcyBtZSA0MSB5ZWFycyBvbGQgYXQgdGhl
IHRpbWUgb2YgdGhpcyB3cml0aW5nICgyMSBPY3RvYmVyIDIwMTkpLg0KDQpJIGFtIGEgdGVjaG5p
Y2FsIHBlcnNvbiwgbm90IGEgbGl0ZXJhcnkgcGVyc29uLiBQbGVhc2UgYmVhciB3aXRoIG15IEVu
Z2xpc2ggaWYgaXQgZG9lcyBub3QgY29uZm9ybSB0byB5b3VyIGV4cGVjdGF0aW9ucy4NCg0KSW4g
dGhlIHllYXIgMTk4NCwgSSBjb21wbGV0ZWQgbXkgMm5kIHllYXIga2luZGVyZ2FydGVuIGNvdXJz
ZSBhdCBhIFBlb3BsZSdzIEFjdGlvbiBQYXJ0eSAoUEFQKSBDb21tdW5pdHkgRm91bmRhdGlvbiBL
aW5kZXJnYXJ0ZW4gc29tZXdoZXJlIGluIEJlZG9rIE5vcnRoIGluIFNpbmdhcG9yZS4gV2hlbiBJ
IHdhcyBib3JuLCBJIHdhcyBhbHJlYWR5IGxpdmluZyBpbiBCZWRvayBOb3J0aC4NCg0KMTk4NTog
RW5yb2xsZWQgaW50byBZdSBOZW5nIFByaW1hcnkgU2Nob29sLiBTdGFydGVkIHByaW1hcnkgc2No
b29sIHllYXIgMS4NCg0KMTk4OTogSSB3YXMgdHJhbnNmZXJyZWQgdG8gSHVhbWluIFByaW1hcnkg
U2Nob29sIChkdXJpbmcgcHJpbWFyeSBzY2hvb2wgeWVhciA1KSB3aGVuIG15IGZhbWlseSBtb3Zl
ZCB0byBZaXNodW4gQXZlbnVlIDUuIEl0IHdhcyBhdCB0aGlzIHRpbWUgdGhhdCBJIHJlYWxpemVk
IHRoYXQgc29tZXRoaW5nIGlzIHdyb25nIHdpdGggbXkgbW90aGVyLiBTaGUgd2FzIGhlYXJpbmcg
dm9pY2VzIGFuZCB0aG91Z2h0IHRoYXQgb3VyIFlpc2h1biBuZWlnaGJvcnMgd2VyZSBzY29sZGlu
ZyBoZXIgYWxsIHRoZSB0aW1lLiBBbnlvbmUgd2hvIGhlYXJzIHZvaWNlcyBpcyBhIFRhcmdldGVk
IEluZGl2aWR1YWwuDQoNCjE5OTA6IENvbXBsZXRlZCBwcmltYXJ5IHNjaG9vbCBlZHVjYXRpb24g
d2l0aCBhIFByaW1hcnkgU2Nob29sIExlYXZpbmcgRXhhbWluYXRpb24gKFBTTEUpIHNjb3JlIG9m
IDIzOC4NCg0KMTk5MTogRW5yb2xsZWQgaW50byBBaG1hZCBJYnJhaGltIFNlY29uZGFyeSBTY2hv
b2wuIFN0YXJ0ZWQgc2Vjb25kYXJ5IHNjaG9vbCB5ZWFyIDEgKEV4cHJlc3Mgc3RyZWFtKS4gSSB3
YXMgMm5kIGluIExldmVsIGZvciBTZWNvbmRhcnkgMSAoRXhwcmVzcykgYW5kIGF3YXJkZWQgMXN0
IGluIEhpc3RvcnksIDFzdCBpbiBHZW9ncmFwaHkgYW5kIDFzdCBpbiBEZXNpZ24gYW5kIFRlY2hu
b2xvZ3kuDQoNCjE5OTI6IEkgd2FzIDFzdCBpbiBMZXZlbCBmb3IgU2Vjb25kYXJ5IDIgKEV4cHJl
c3MpIGFuZCBhd2FyZGVkIDFzdCBpbiBHZW9ncmFwaHkuDQoNCjE5OTM6IEkgd2FzIDJuZCBpbiBM
ZXZlbCBmb3IgU2Vjb25kYXJ5IDMgKEV4cHJlc3MpIGFuZCBhd2FyZGVkIDFzdCBpbiBHZW9ncmFw
aHkuDQoNCjE5OTQ6IENvbXBsZXRlZCBteSBzZWNvbmRhcnkgc2Nob29sIGVkdWNhdGlvbi4gSSB3
YXMgdGhlIEdDRSAiTyIgTGV2ZWwgVG9wIFN0dWRlbnQgYXQgbXkgc2Vjb25kYXJ5IHNjaG9vbCwg
YWZ0ZXIgb2J0YWluaW5nIDcgQTFzIGFuZCBhbiBBMiBmb3IgbXkgR0NFICJPIiBMZXZlbCBFeGFt
aW5hdGlvbiBpbiAxOTk0LiBBd2FyZGVkIGNlcnRpZmljYXRlIG9mIG1lcml0IGZvciBPdXRzdGFu
ZGluZyBQZXJmb3JtYW5jZSBpbiBHQ0UgIk8iIExldmVsIEV4YW1pbmF0aW9uIDE5OTQsIDFzdCBp
biBMZXZlbCBmb3IgU2Vjb25kYXJ5IDQgKEV4cHJlc3MpLCAxc3QgaW4gQWRkaXRpb25hbCBNYXRo
ZW1hdGljcywgMXN0IGluIFBoeXNpY3MuDQoNCkhlcmUgYXJlIG15IGdyYWRlcyBmb3IgR0NFICJP
IiBMZXZlbCBFeGFtaW5hdGlvbiAxOTk0Og0KDQoxLiBFbmdsaXNoIExhbmd1YWdlLCBBMg0KDQoy
LiBMaXRlcmF0dXJlIGluIEVuZ2xpc2gsIEExDQoNCjMuIEdlb2dyYXBoeSwgQTENCg0KNC4gTWF0
aGVtYXRpY3MgRCwgQTENCg0KNS4gQWRkaXRpb25hbCBNYXRoZW1hdGljcywgQTENCg0KNi4gUGh5
c2ljcywgQTENCg0KNy4gQ2hlbWlzdHJ5LCBBMQ0KDQo4LiBDaGluZXNlLCBBMQ0KDQoxOTk1OiBF
bnJvbGxlZCBpbnRvIERpcGxvbWEgaW4gTWVjaGF0cm9uaWNzIGNvdXJzZSBhdCBTaW5nYXBvcmUg
UG9seXRlY2huaWMuDQoNCkF3YXJkZWQgQ2FkZW5jZSBQcml6ZSBmb3Igb3V0c3RhbmRpbmcgYWNh
ZGVtaWMgcGVyZm9ybWFuY2UgaW4gdGhlIEZpcnN0IFllYXIgRGlwbG9tYSBpbiBNZWNoYXRyb25p
Y3MgQ291cnNlLg0KDQpBd2FyZGVkIENhZGVuY2UgUHJpemUgZm9yIG1lcml0b3Jpb3VzIGFjYWRl
bWljIHBlcmZvcm1hbmNlIGluIHRoZSBTZWNvbmQgWWVhciBEaXBsb21hIGluIE1lY2hhdHJvbmlj
cyBDb3Vyc2UuDQoNCkF3YXJkZWQgRnJvbnRsaW5lIFRlY2hub2xvZ2llcyBQcml6ZSBhbmQgTW90
b3JvbGEgUHJpemUgZm9yIG1lcml0b3Jpb3VzIGFjYWRlbWljIHBlcmZvcm1hbmNlIGluIHRoZSBE
aXBsb21hIGluIE1lY2hhdHJvbmljcyBDb3Vyc2UgKG92ZXJhbGwpLg0KDQoxOTk4OiBHcmFkdWF0
ZWQgZnJvbSBTaW5nYXBvcmUgUG9seXRlY2huaWMgd2l0aCBhIERpcGxvbWEgaW4gTWVjaGF0cm9u
aWNzICh3aXRoIE1lcml0KS4gQ29uc2NyaXB0ZWQgaW50byB0aGUgU2luZ2Fwb3JlIGFybXkuDQoN
CjIwMDE6IENvbXBsZXRlZCBOYXRpb25hbCBTZXJ2aWNlLiBFbnJvbGxlZCBpbnRvIG1lY2hhbmlj
YWwgZW5naW5lZXJpbmcgdW5kZXJncmFkdWF0ZSBkZWdyZWUgY291cnNlIGF0IHRoZSBOYXRpb25h
bCBVbml2ZXJzaXR5IG9mIFNpbmdhcG9yZSAoTlVTKS4NCg0KRGVjZW1iZXIgMjAwNjogQ29tcGxl
dGVkIHVuaXZlcnNpdHkgc3R1ZGllcyB3aXRoIGEgQmFjaGVsb3Igb2YgRW5naW5lZXJpbmcgKE1l
Y2hhbmljYWwgRW5naW5lZXJpbmcpIFNlY29uZCBDbGFzcyBIb25vdXJzIChMb3dlcikgZGVncmVl
Lg0KDQpBZmVyIGdyYWR1YXRpb24gZnJvbSBOVVMsIEkgZ290IGEgam9iIGFzIGFuIEVuZ2luZWVy
IChJbmZvcm1hdGlvbiBUZWNobm9sb2d5KSBhdCBEZWZlbnNlIFNjaWVuY2UgYW5kIFRlY2hub2xv
Z3kgQWdlbmN5IChEU1RBKSBpbiBGZWJydWFyeSAyMDA3LiBJIHdhcyB5b3VuZyBhbmQgaW1wdWxz
aXZlIHdpdGggYSBsb3Qgb2YgYW5nZXIgYW5kIGZydXN0cmF0aW9ucyBkdWUgdG8gbXkgZmFtaWx5
IHNpdHVhdGlvbi4gSSB3YXMgYWxzbyBleHRyZW1lbHkgcmV0YXJkZWQsIGV4dHJlbWVseSBpbWJl
Y2lsZSBhbmQgYW4gaWRpb3QuIFdoZW4gSSB3YXMgaGF2aW5nIGEgcHJpdmF0ZSBjYXN1YWwgY29u
dmVyc2F0aW9uIHdpdGggbXkgbWFuYWdlciBNci4gTG9oIENob29uIEZhaCBpbiBoaXMgb2ZmaWNl
IGF0IERTVEEsIEkgc2FpZDoNCg0KIlNpbmdhcG9yZSBpcyBub3QgYSBkZW1vY3JhY3kuIFdoZW4g
U2luZ2Fwb3JlIHN0cm9uZyBtYW4gTGVlIEt1YW4gWWV3IGlzIGdvbmUsIHRoZXJlIHdvdWxkIGJl
IG1vcmUgZnJlZWRvbXMgaW4gdGhlIGNvdW50cnkuIg0KDQpBcyBhIGNvbnNlcXVlbmNlIG9mIG15
IHJldGFyZGVkLCBpZGlvdGljIGFuZCBjYXJlbGVzcyByZW1hcmtzIG9uIFNpbmdhcG9yZSBNaW5p
c3RlciBNZW50b3IgTGVlIEt1YW4gWWV3LCBJIGZhaWxlZCB0byBvYnRhaW4gVG9wIFNlY3JldCBz
ZWN1cml0eSBjbGVhcmFuY2Ugd2hlbiBJIHdhcyBpbiBEU1RBIGFuZCB3YXMgZm9yY2VkIHRvIHJl
c2lnbiBpbiBBdWd1c3QgMjAwNy4gT24gcmV0cm9zcGVjdGlvbiwgaXQgd2FzIHRoZSB5ZWFyIDIw
MDcgdGhhdCBJIGJlY2FtZSB0YXJnZXRlZCBhbmQgYmVnYW4gaGVhcmluZyBtZW5hY2luZyBhbmQg
dGhyZWF0ZW5pbmcgdm9pY2VzIGZyb20gdGhlIGdvdmVybm1lbnQuIFRoZSBTaW5nYXBvcmUgR292
ZXJubWVudCBoYWQgd2FnZWQgcHN5Y2hvbG9naWNhbCB3YXJmYXJlIG9uIG1lLg0KDQpHb3Zlcm5t
ZW50cyBhbGwgb3ZlciB0aGUgd29ybGQgaGF2ZSBiZWVuIGNvdmVydGx5IHVzaW5nIEdvdmVybm1l
bnQgTWluZCBDb250cm9sIFRlY2hub2xvZ3kgKEdNQ1QpIGZvciBkZWNhZGVzIHRvIG1ha2UgdGhl
aXIgb3duIGNpdGl6ZW5zIGhlYXIgZ292ZXJubWVudCB2b2ljZXMuIFlvdSBzaG91bGQgcmVhZCAi
TWljcm93YXZlIFdlYXBvbnMgQXJlIFByaW1lIFN1c3BlY3QgaW4gSWxscyBvZiBVLlMuIEVtYmFz
c3kgV29ya2VycyIgcHVibGlzaGVkIGJ5IFRoZSBOZXcgWW9yayBUaW1lcy4gVGhpcyBpcyB0aGUg
R29zcGVsIGZvciBUYXJnZXRlZCBJbmRpdmlkdWFscyAoVElzKS4gVGhlIGxpbmsgaXMgaHR0cHM6
Ly93d3cubnl0aW1lcy5jb20vMjAxOC8wOS8wMS9zY2llbmNlL3NvbmljLWF0dGFjay1jdWJhLW1p
Y3Jvd2F2ZS5odG1sDQoNClRoZXJlIGFyZSAzIG1ham9yIGZ1bmN0aW9ucyBvZiBHb3Zlcm5tZW50
IE1pbmQgQ29udHJvbCBUZWNobm9sb2d5Og0KDQooMSkgUmVhZCB5b3VyIG1pbmQgYW5kIHRob3Vn
aHRzIHJlbW90ZWx5LiBUaGlzIGlzIGFsc28ga25vd24gYXMgUmVtb3RlIE5ldXJhbCBNb25pdG9y
aW5nIChSTk0pLg0KDQooMikgU2VlIHRocm91Z2ggeW91ciBleWVzLg0KDQooMykgSGVhciB0aHJv
dWdoIHlvdXIgZWFycy4NCg0KVGFyZ2V0ZWQgSW5kaXZpZHVhbHMgKFRJcykgYXJlIGNvbnN0YW50
bHkgdW5kZXIgMjR4NyB0aG91Z2h0IHN1cnZlaWxsYW5jZS4NCg0KSW4gU2VwdGVtYmVyIDIwMDcs
IEkgZm91bmQgYW5vdGhlciBqb2IgYXMgYSBTeXN0ZW0gRW5naW5lZXIgKEluZm9ybWF0aW9uIFRl
Y2hub2xvZ3kpIGF0IE5DUyBQdGUgTHRkLiBJIGNvdWxkbid0IGNvbmNlbnRyYXRlIG9uIG15IGpv
YiBkdWUgdG8gY29uc3RhbnQgdGFyZ2V0aW5nIGJ5IHRoZSBTaW5nYXBvcmUgR292ZXJubWVudCwg
c28gSSBoYWQgdG8gbGVhdmUgbXkgam9iIGFmdGVyIG9uZSB5ZWFyIGluIEF1Z3VzdCAyMDA4Lg0K
DQpBZnRlciBzb21lIGpvYiBzZWFyY2hpbmcsIEkgam9pbmVkIEFzaWFTb2Z0IE9ubGluZSBQdGUg
THRkIGFzIGFuIEluZm9ybWF0aW9uIFN5c3RlbXMgRW5naW5lZXIgaW4gRmVicnVhcnkgMjAwOS4g
VGhlcmUgd2FzIGEgY2hhbmdlIG9mIElUIG1hbmFnZXIgaW4gU2VwdGVtYmVyIDIwMDkuIFRoZSBu
ZXcgSVQgbWFuYWdlciBNci4gTWVsdmluIExlZSBoYWQgY2hhbGxlbmdlZCBtZSB0byBjb21wbGV0
ZSBhbiBJVCBwcm9qZWN0IGluIGEgZmV3IHdlZWtzLiBJIHdhcyByZXRhcmRlZCwgaW1iZWNpbGUg
YW5kIGlkaW90aWMgb25jZSBhZ2Fpbi4gSW4gcmVzcG9uc2UgdG8gaGlzIGNoYWxsZW5nZSwgSSB1
c2VkIFNpbmdhcG9yZSBNaW5pc3RlciBNZW50b3IgTGVlIEt1YW4gWWV3IGFzIGEgYmV0LiBJIHRv
bGQgTWVsdmluIExlZSB0aGF0IGlmIEkgY291bGRuJ3QgY29tcGxldGUgdGhlIGFzc2lnbmVkIElU
IHByb2plY3QgaW4gMiBvciAzIHdlZWtzLCB0aGVuIFNpbmdhcG9yZSBNaW5pc3RlciBNZW50b3Ig
TGVlIEt1YW4gWWV3IHdvdWxkIGJlIGEgd2FuZyBiYSBkYW4gW0hhbnl1IFBpbnlpbl0uIEluIENo
aW5lc2UgbGFuZ3VhZ2UsIHdhbmcgYmEgZGFuIFtIYW55dSBQaW55aW5dIHJlZmVycyB0byBhIHRv
cnRvaXNlIG9yIHR1cnRsZS4gQmVmb3JlIEkgY291bGQgcmVhbGl6ZSBpdCwgdGFyZ2V0aW5nIGJ5
IHRoZSBTaW5nYXBvcmUgR292ZXJubWVudCBoYWQgYmVjb21lIG11Y2ggbXVjaCBtdWNoIG1vcmUg
d29yc2UgYW5kIGluY3JlYXNlZCBtYW55IG1hbnkgbWFueSBmb2xkcy4gSSBkZWVwbHkgcmVncmV0
dGVkIG15IGltYmVjaWxpdHkgYW5kIHN0dXBpZGl0eS4gSSBsZWZ0IEFzaWFTb2Z0IE9ubGluZSBQ
dGUgTHRkIGluIE9jdG9iZXIgMjAwOSBkdWUgdG8gcGFyYW5vaWEuDQoNCk5vdmVtYmVyIDIwMDk6
IEkgd2FzIHRoZSBmaXJzdCBwZXJzb24gaW4gdGhlIHdvcmxkIHRvIGhhdmUgcG9ydGVkL2NvbnZl
cnRlZCBHb29nbGUgQ2hyb21lIE9TIGZvciBuZXRib29rcyBmcm9tIDMyLWJpdCB0byA2NC1iaXQu
IEkgaGF2ZSBhbHNvIGFkZGVkIGluIHN1cHBvcnQgZm9yIG9wZW4gc291cmNlIFhlbiB2aXJ0dWFs
aXphdGlvbi4gSSBuYW1lZCBpdCBDaHJvbWl1bU9TNjQuDQoNClJlZmVyZW5jZXM6DQoNClswXSBB
cnRpY2xlIGF0IFhlbiBQcm9qZWN0IEJsb2c6IEFubm91bmNpbmcgdGhlIFJlbGVhc2Ugb2YgdGhl
IFdvcmxk4oCZcyBGaXJzdCA2NC1iaXQgQnVpbGQgb2YgR29vZ2xl4oCZcyBDaHJvbWl1bSBPUyB3
aXRoIFhlbiBWaXJ0dWFsaXphdGlvbiBTdXBwb3J0DQpMaW5rOiBodHRwczovL2Jsb2cueGVucHJv
amVjdC5vcmcvMjAwOS8xMi8wMy9hbm5vdW5jaW5nLXRoZS1yZWxlYXNlLW9mLXRoZS13b3JsZHMt
Zmlyc3QtNjQtYml0LWJ1aWxkLW9mLWdvb2dsZXMtY2hyb21pdW0tb3Mtd2l0aC14ZW4tdmlydHVh
bGl6YXRpb24tc3VwcG9ydC8NCg0KWzFdIEFydGljbGUgYXQgVmlydHVhbGl6YXRpb24uaW5mbzog
WGVuIHNsaXBzIGluIEdvb2dsZSBDaHJvbWUgT1MgKHNvcnQgb2YpDQpMaW5rOiBodHRwOi8vdmly
dHVhbGl6YXRpb24uaW5mby9lbi9uZXdzLzIwMDkvMTIveGVuLXNsaXBzLWluLWdvb2dsZS1jaHJv
bWUtb3Mtc29ydC1vZi5odG1sDQoNClsyXSBBcnRpY2xlIGF0IFRlY2hSYWRhcjogNjQtYml0IENo
cm9taXVtIE9TIHN1cmZhY2VzDQpMaW5rOiBodHRwczovL3d3dy50ZWNocmFkYXIuY29tL3NnL25l
d3Mvc29mdHdhcmUvb3BlcmF0aW5nLXN5c3RlbXMvNjQtYml0LWNocm9taXVtLW9zLXN1cmZhY2Vz
LTY1NjMxNA0KDQpbM10gQXJ0aWNsZSBhdCBHaXptb2RvOiA2NC1iaXQgQ2hyb21pdW0gTm93IEF2
YWlsYWJsZSBmb3IgTWFjIFVzZXJzDQpMaW5rOiBodHRwczovL2dpem1vZG8uY29tLzU0MjA0NzAv
NjQtYml0LWNocm9taXVtLW5vdy1hdmFpbGFibGUtZm9yLW1hYy11c2Vycw0KDQpbNF0gQXJ0aWNs
ZSBhdCBMaW51eCBRdWVzdGlvbnM6IExhdGVzdCBHb29nbGUgQ2hyb21lIE9TIERvd25sb2FkOiBH
dWFyYW50ZWVkIHRvIFdvcmshDQpMaW5rOiBodHRwczovL3d3dy5saW51eHF1ZXN0aW9ucy5vcmcv
cXVlc3Rpb25zL2xpbnV4LXNvZnR3YXJlLTIvbGF0ZXN0LWdvb2dsZS1jaHJvbWUtb3MtZG93bmxv
YWQtZ3VhcmFudGVlZC10by13b3JrLTc3MTA5My8NCg0KWzVdIEFydGljbGUgYXQgRmVkb3JhIFBy
b2plY3Q6IFNjcmVlbnNob3QgVHV0b3JpYWw6IEhvdyB0byBELUktWSB5b3VyIG93biBHb29nbGUg
Q2hyb21lIE9TIHdpdGggWGVuLWJhc2VkIFVidW50dSA5LjEwIEthcm1pYyBLb2FsYSBhbWQ2NCBW
aXJ0dWFsIE1hY2hpbmUgaW4gRmVkb3JhIDExIHg4Nl82NCBQdi1PcHMgRG9tMA0KTGluazogaHR0
cHM6Ly9saXN0cy5mZWRvcmFwcm9qZWN0Lm9yZy9hcmNoaXZlcy9saXN0L3VzZXJzQGxpc3RzLmZl
ZG9yYXByb2plY3Qub3JnL3RocmVhZC9JRkQ1WUdHSzNHVVFQVE5GVlNXWlRaTldSTkxTSVJRQS8/
c29ydD1kYXRlDQoNCls2XSBBcnRpY2xlIGF0IFhlbiBQcm9qZWN0OiBbWGVuLXVzZXJzXSBBbm5v
dW5jaW5nIHRoZSBSZWxlYXNlIG9mIHRoZSBXb3JsZCdzIEZpcnN0IDY0LWJpdCBCdWlsZCBvZiBH
b29nbGUncyBDaHJvbWl1bSBPUyB3aXRoIFhlbiBWaXJ0dWFsaXphdGlvbiBTdXBwb3J0DQpMaW5r
OiBodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL2FyY2hpdmVzL2h0bWwveGVuLXVzZXJzLzIw
MDktMTIvbXNnMDAwOTEuaHRtbA0KDQpbN10gQXJ0aWNsZSBhdCBWTXdhcmUgZm9ydW1zOiBMYXRl
c3QgR29vZ2xlIENocm9tZSBPUyBWTXdhcmUgVk1ESyBJbWFnZSBGaWxlIEF2YWlsYWJsZSBmb3Ig
RG93bmxvYWQgYW5kIFRlc3RpbmcNCkxpbms6IGh0dHBzOi8vY29tbXVuaXRpZXMudm13YXJlLmNv
bS90aHJlYWQvMjQzOTg2DQoNCls4XSBZb3VUdWJlIFZpZGVvOiBHb29nbGUgQ2hyb21lIE9TIChD
aHJvbWl1bSBPUykgb24gWGVuDQpMaW5rOiBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PUljbDU5V21DNTZJJmdsPVNHJmhsPWVuLUdCDQoNCls5XSBBcnRpY2xlIGF0IFZpcnR1YWxCb3g6
IExhdGVzdCBHb29nbGUgQ2hyb21lIE9TIERvd25sb2FkOiBHdWFyYW50ZWVkIHRvIFdvcmshDQpM
aW5rOiBodHRwczovL2ZvcnVtcy52aXJ0dWFsYm94Lm9yZy92aWV3dG9waWMucGhwP2Y9MiZ0PTI0
OTY1DQoNClsxMF0gQXJ0aWNsZSBhdCBsaWxpcHV0aW5nOiBFbnRodXNpYXN0IG1ha2VzIDY0LWJp
dCBidWlsZCBvZiBHb29nbGUgQ2hyb21lIE9TIGF2YWlsYWJsZQ0KTGluazogaHR0cHM6Ly9saWxp
cHV0aW5nLmNvbS8yMDA5LzExL2VudGh1c2lhc3QtbWFrZXMtNjQtYml0LWJ1aWxkLW9mLWdvb2ds
ZS1jaHJvbWUtb3MtYXZhaWxhYmxlLmh0bWwNCg0KWzExXSBBcnRpY2xlIGF0IDNkbmV3cyBSdXNz
aWE6IENocm9taXVtT1M2NCDigJMgNjQt0LHQuNGC0L3QsNGPIENocm9tZSBPUw0KTGluazogaHR0
cHM6Ly8zZG5ld3MucnUvNTgzOTI3DQoNClsxMl0gQXJ0aWNsZSBhdCBVYmVyZ2l6bW86IEdvb2ds
ZSBDaHJvbWUgT1MgaW4gNjQtYml0DQpMaW5rOiBodHRwczovL3d3dy51YmVyZ2l6bW8uY29tLzIw
MDkvMTIvZ29vZ2xlLWNocm9tZS1vcy1pbi02NC1iaXQvDQoNCkJldHdlZW4gT2N0b2JlciAyMDA5
IGFuZCBEZWNlbWJlciAyMDExLCBJIHdlbnQgdGhyb3VnaCBoZWxsIG9uIFBsYW5ldCBFYXJ0aC4g
SSBoZWFyIG1lbmFjaW5nIGFuZCB0aHJlYXRlbmluZyB2b2ljZXMgZnJvbSB0aGUgU2luZ2Fwb3Jl
IEdvdmVybm1lbnQgZXZlcnkgZGF5IGFuZCBldmVyeSBtaW51dGUuDQoNCkZhc3QgZm9yd2FyZCB0
byB0aGUgeWVhciAyMDExLCBteSBmYW1pbHkgbW92ZWQgZnJvbSBCZWRvayBSZXNlcnZvaXIgUm9h
ZCB0byBUb2EgUGF5b2guIFdlIGhhZCBtb3ZlZCBmcm9tIFlpc2h1biBBdmVudWUgNSB0byBCdWtp
dCBCYXRvayBpbiBTaW5nYXBvcmUgYnV0IEkgY2FuJ3QgcmVjYWxsIHdoaWNoIHllYXIgaXQgd2Fz
IGF0IHRoZSBtb21lbnQuIFRoZW4gZnJvbSBCdWtpdCBCYXRvayB0byBCZWRvayBSZXNlcnZvaXIg
Um9hZC4NCg0KT25lIG5pZ2h0IGluIE1heSAyMDExLCBJIHdhcyB3YWxraW5nIGFsb25nIHRoZSBz
dHJlZXQgb3V0c2lkZSBHaWFudCBIeXBlcm1hcmtldCBhdCBUb2EgUGF5b2ggTG9yb25nIDQsIHRo
aW5raW5nIHRvIG15c2VsZiBhbmQgc3BlYWtpbmcgdG8gbm9ib2R5LiBUbyBteSBzdXJwcmlzZSwg
SSBoZWFyZCBhIHZvaWNlIHJlaXRlcmF0aW5nIG15IHRob3VnaHRzLiBJIHdlbnQgaG9tZSwgZGlk
IGEgR29vZ2xlIHNlYXJjaCBhbmQgZm91bmQgb3V0IHRoYXQgSSBhbSBhY3R1YWxseSBhIFRhcmdl
dGVkIEluZGl2aWR1YWwhIEFmdGVyIHRoZSBkaXNjb3ZlcnkgdGhhdCBJIGFtIGFjdHVhbGx5IGEg
VGFyZ2V0ZWQgSW5kaXZpZHVhbCwgZ292ZXJubWVudCB2b2ljZXMgdGFwZXJlZCBvZmYgYWZ0ZXIg
RGVjZW1iZXIgMjAxMS4NCg0KRm9yIGEgcGVyaW9kIG9mIGZpdmUgeWVhcnMgYmV0d2VlbiAyMDA3
IGFuZCAyMDExLCBJIGNvdWxkbid0IHN1c3RhaW4gYW5kIGNvbmNlbnRyYXRlIG9uIG15IGpvYnMg
YmVjYXVzZSBJIHdhcyBoZWFyaW5nIGdvdmVybm1lbnQgdm9pY2VzIGNvbnN0YW50bHkuIEFmdGVy
IHRoZSBnb3Zlcm5tZW50IHZvaWNlcyB0YXBlcmVkIG9mZiBhZnRlciBEZWNlbWJlciAyMDExLCBJ
IHdhcyBsb3N0IGFuZCBkaWRuJ3Qga25vdyB3aGF0IHRvIGRvIGZvciBhbm90aGVyIGZpdmUgeWVh
cnMgYmV0d2VlbiAyMDEyIGFuZCAyMDE2LiBJIHdhcyBnb2luZyBpbnRvIGFuZCBvdXQgb2YgbnVt
ZXJvdXMgam9icyBiZXR3ZWVuIDIwMTIgYW5kIDIwMTYgYXMgd2VsbC4NCg0KSW4gMjAxNiwgSSBm
aW5hbGx5IGRlY2lkZWQgYW5kIG1hZGUgdXAgbXkgbWluZCB0aGF0IEkgd2FudGVkIHRvIGJlIGFu
IEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgU3VwcG9ydCBFbmdpbmVlci4gDQoNCk9jdCAyMDE2OiBF
bnJvbGxlZCBpbnRvIG9uZS15ZWFyIHBhcnQtdGltZSBEaXBsb21hIChjb252ZXJzaW9uKSBpbiBD
b21wdXRlciBOZXR3b3JraW5nIGNvdXJzZSBhdCBTaW5nYXBvcmUgUG9seXRlY2huaWMuDQoNCjIx
IE1hcmNoIDIwMTc6IEFwcGxpZWQgZm9yIHJlZnVnZWUgc3RhdHVzL3BvbGl0aWNhbCBhc3lsdW0g
YXQgdGhlIFVuaXRlZCBOYXRpb25zIFJlZnVnZWUgQWdlbmN5IGluIEJhbmdrb2ssIFRoYWlsYW5k
LiBUaGUgVW5pdGVkIE5hdGlvbnMgUmVmdWdlZSBBZ2VuY3kgaW4gQmFuZ2tvayBkb2VzIG5vdCBv
cGVyYXRlIGEgcmVmdWdlZSBzaGVsdGVyIGFuZCBkb2VzIG5vdCBwcm92aWRlIGZpbmFuY2lhbCBh
c3Npc3RhbmNlIHRvIHJlZnVnZWUgc2Vla2Vycy4gQXJtZWQgd2l0aCBvbmx5IFNHRCQzMDAsIEkg
aGFkIHRvIGZseSBiYWNrIHRvIFNpbmdhcG9yZSB0aGUgbmV4dCBkYXkgb24gMjIgTWFyY2ggMjAx
Ny4gV2l0aCBvbmx5IFNHRCQzMDAgbGVmdCwgbm8gaG90ZWwgaW4gQmFuZ2tvaywgVGhhaWxhbmQg
d291bGQgYWxsb3cgbWUgdG8gc3RheSBvbiBpbmRlZmluaXRlbHkgZm9yIGZyZWUuIEFzIEkgaGF2
ZSBtZW50aW9uZWQgZWFybGllciwgdGhlcmUgaXMgbm8gcmVmdWdlZSBzaGVsdGVyIGluIFRoYWls
YW5kIGFuZCB0aGUgVW5pdGVkIE5hdGlvbnMgUmVmdWdlZSBBZ2VuY3kgZG9lcyBub3QgcHJvdmlk
ZSBmaW5hbmNpYWwgYXNzaXN0YW5jZSB0byByZWZ1Z2VlIHNlZWtlcnMuDQoNCkFwcmlsIDIwMTcg
dG8gSnVseSAyMDE3OiBJIHdhcyB3b3JraW5nIGF0IGEgc3lzdGVtcyBpbnRlZ3JhdG9yIChTSSkg
ZmlybSBpbiBTaW5nYXBvcmUgYXMgYW4gSVQgc3VwcG9ydCBlbmdpbmVlci4gSSByZXNpZ25lZCBp
biBKdWx5IDIwMTcgYmVjYXVzZSBJIHdhbnRlZCB0byBzcGVuZCBhbGwgbXkgdGltZSBwcmVwYXJp
bmcgZm9yIHRoZSBmaW5hbCBleGFtcyBpbiBBdWd1c3QgMjAxNy4gSXQgd291bGQgYmUgbXkgdmVy
eSBmaXJzdCBJVCBjZXJ0aWZpY2F0aW9uIGFuZCBJIHdhbnRlZCB0byBtYWtlIHN1cmUgSSBwYXNz
IHRoZSBmaW5hbCBleGFtcyBhbmQgZ2V0IHRoZSBEaXBsb21hIGluIENvbXB1dGVyIE5ldHdvcmtp
bmcuIEl0IHdhcyBhbHNvIHRoZSB2ZXJ5IGZpcnN0IHRpbWUgSSBmbGV3IHRvIFRhaXBlaSwgVGFp
d2FuIGFuZCBhdHRlbmRlZCBUYWl3YW4gQWR1bHQgRXhwbyBpbiAyMDE3IHdoaWxlIEkgd2FzIGhh
dmluZyBhIGpvYi4NCg0KT2N0IDIwMTc6IEdyYWR1YXRlZCBmcm9tIERpcGxvbWEgKGNvbnZlcnNp
b24pIGluIENvbXB1dGVyIE5ldHdvcmtpbmcgY291cnNlIGF0IFNpbmdhcG9yZSBQb2x5dGVjaG5p
YyB3aXRoIDQgRGlzdGluY3Rpb25zIGFuZCBhIEdyYWRlIEEgZm9yIEVUMTUwNSBwcm9qZWN0Lg0K
DQpBZnRlciBncmFkdWF0aW9uLCBJIHdvcmtlZCBwYXJ0LXRpbWUgYXQgQ2hhbGxlbmdlciBzdXBl
cnN0b3JlIGFzIGEgcmV0YWlsIGFzc2lzdGFudCBmb3Igc29tZSB0aW1lIGJlZm9yZSB3b3JraW5n
IGFzIGEgc2VjdXJpdHkgZ3VhcmQgYXQgTmF0aW9uYWwgTGlicmFyeSBCb2FyZCBhdCBCdWdpcyBm
b3IgMyBtb250aHMuDQoNCk5vdiAyMDE3OiBJIGZsZXcgdG8gVG9reW8sIEphcGFuIHRvIGF0dGVu
ZCBKYXBhbiBBZHVsdCBFeHBvIDIwMTcgYW5kIHRyaWVkIHRvIGFwcGx5IGZvciB0aGUgcm9sZSBv
ZiBKQVYgYWN0b3IuIEl0IHdhcyBteSB2ZXJ5IGZpcnN0IHRpbWUgaW4gSmFwYW4uDQoNCkxhdGUg
Tm92IDIwMTc6IEFmdGVyIEkgcmV0dXJuZWQgdG8gU2luZ2Fwb3JlIGZyb20gVG9reW8sIEphcGFu
LCBJIHN0YXJ0ZWQgd29ya2luZyBmb3IgYSB2ZXJ5IHNtYWxsIHN5c3RlbXMgaW50ZWdyYXRvciAo
U0kpIGZpcm0gaW4gU2luZ2Fwb3JlIGFzIGFuIElUIHN1cHBvcnQgZW5naW5lZXIuIEkgd29ya2Vk
IGluIHRoaXMgY29tcGFueSBmb3IgMSB5ZWFyICgxMiBtb250aHMpLiBJbml0aWFsbHksIHdoZW4g
SSBqb2luZWQgdGhpcyBjb21wYW55LCBzYWxhcnkgcGF5bWVudCB3YXMgb24gdGltZSBmb3IgdGhl
IGZpcnN0IDIgb3IgMyBtb250aHMuIFN1YnNlcXVlbnRseSwgc2FsYXJ5IHBheW1lbnQgd2FzIGRl
bGF5ZWQgYnkgMi0zIHdlZWtzIGV2ZXJ5IG1vbnRoLiBJbiB0aGUgZmluYWwgMisgbW9udGhzIG9m
IG15IDEgeWVhciBzdGF5LCBJIGNvdWxkbid0IGdldCBteSBzYWxhcnkgb2YgYWJvdXQgJDUwMDAu
IEkgaGFkIHRvIGNoYXNlIGFmdGVyIG15IGJvc3MgYWxtb3N0IGV2ZXJ5IGRheSBmb3IgbXkgb3V0
c3RhbmRpbmcgc2FsYXJpZXMgZm9yIGNsb3NlIHRvIDIgbW9udGhzLiBNeSBib3NzIHdhcyBpcnJp
dGF0ZWQgYnkgbXkgY29uc3RhbnQgY2hhc2luZyBhbmQgZGVjaWRlZCB0byB0ZXJtaW5hdGUgbXkg
ZW1wbG95bWVudCBvbiAyMiBOb3YgMjAxOCBidXQgaGUgYXNrZWQgbWUgdG8gd29yayBmb3IgaGlt
IGZvciBhbm90aGVyIG9uZSBtb250aC4gV2hlbiBJIHN0aWxsIGNvdWxkbid0IGdldCBteSBvdXRz
dGFuZGluZyBzYWxhcmllcywgSSBhcHByb2FjaGVkIHRoZSBNaW5pc3RyeSBvZiBNYW5wb3dlciAo
TU9NKSB3aGljaCB0b2xkIG1lIHRoYXQgSSBhbSBlbnRpdGxlZCB0byByZXNpZ25lZCB3aXRob3V0
IG5vdGljZSBpZiBJIGFtIHVuYWJsZSB0byBnZXQgbXkgc2FsYXJ5IGFmdGVyIDcgZGF5cy4gT24g
MyBEZWNlbWJlciAyMDE4LCBJIHByb2NlZWRlZCB0byByZXNpZ24gd2l0aG91dCBub3RpY2UgYW5k
IGZpbGVkIG15IHNhbGFyeSBjbGFpbSBhdCB0aGUgVHJpcGFydGl0bGUgQWxsaWFuY2UgZm9yIERp
c3B1dGUgTWFuYWdlbWVudCAoVEFETSkuIEJvdGggdGhlIGJvc3MgYW5kIG15c2VsZiBzaWduZWQg
dGhlIFNldHRsZW1lbnQgQWdyZWVtZW50IGFuZCBJIGhhZCB0byBmaWxlIHRoZSBTZXR0bGVtZW50
IEFncmVlbWVudCBhdCB0aGUgU3RhdGUgQ291cnRzIGluIFNpbmdhcG9yZS4gSSBtYW5hZ2VkIHRv
IHJlY2VpdmUgbXkgb3V0c3RhbmRpbmcgc2FsYXJ5IG9mIHNsaWdodGx5IG1vcmUgdGhhbiAkNTAw
MCBpbiBmaXZlIG1vbnRobHkgaW5zdGFsbG1lbnRzIHVudGlsIDI4IEFwcmlsIDIwMTkuDQoNCkF1
Z3VzdCAyMDE4OiBBdHRlbmRlZCBUYWl3YW4gQWR1bHQgRXhwbyAyMDE4IGFuZCBUYWlwZWkgUmVk
IEV4cG8gMjAxOCBpbiBUYWlwZWksIFRhaXdhbg0KDQpKYW51YXJ5IDIwMTk6IEkgd29ya2VkIGFz
IGEgRGVwbG95bWVudCBFbmdpbmVlciBhdCBOYXRpb25hbCBFbnZpcm9ubWVudCBBZ2VuY3ksIE1p
bmlzdHJ5IG9mIEVudmlyb25tZW50IGFuZCBXYXRlciBSZXNvdXJjZXMsIGluIFNpbmdhcG9yZSBi
ZWZvcmUgYmVpbmcgdGVybWluYXRlZCBhZnRlciBvbmx5IDIgd2Vla3MuDQoNCkkgam9pbmVkIGFu
b3RoZXIgU0kgY29tcGFueSBpbiBTaW5nYXBvcmUgYXMgYSBTZW5pb3IgVGVjaG5pY2FsIFN1cHBv
cnQgRW5naW5lZXIgb24gMjUgRmVicnVhcnkgMjAxOSB1bmRlciB0aGUgZTJpIENhcmVlciBUcmlh
bCBzY2hlbWUuIEkgd2FzIHRlcm1pbmF0ZWQgaW1tZWRpYXRlbHkgd2l0aG91dCBub3RpY2Ugb24g
NiBKdW5lIDIwMTkgKEFsbGllZCBELWRheSkuDQoNCjEtNSBBdWd1c3QgMjAxOTogQXR0ZW5kZWQg
VGFpd2FuIEFkdWx0IEV4cG8gMjAxOSBhbmQgVGFpcGVpIFJlZCBFeHBvIDIwMTkgaW4gVGFpcGVp
LCBUYWl3YW4uIEFwcGxpZWQgZm9yIHJlZnVnZWUgc3RhdHVzL3BvbGl0aWNhbCBhc3lsdW0gYXQg
dGhlIE5hdGlvbmFsIEltbWlncmF0aW9uIEFnZW5jeSwgTWluaXN0cnkgb2YgdGhlIEludGVyaW9y
LCBSZXB1YmxpYyBvZiBDaGluYSAoVGFpd2FuKSBpbiBUYWlwZWkgb24gNSBBdWd1c3QgMjAxOS4g
DQoNCi0tLS0tQkVHSU4gTlRVQyBMRUFSTklORyBIVUItLS0tLQ0KDQo0IE1hcmNoIDIwMTcgdG8g
MTAgQXByaWwgMjAxNzogQXR0ZW5kZWQgQ2lzY28gQ2VydGlmaWVkIE5ldHdvcmsgQXNzb2NpYXRl
IChDQ05BKSBjb3Vyc2UgYXQgTlRVQyBMZWFybmluZyBIdWIgaW4gU2luZ2Fwb3JlLiBBd2FyZGVk
IENlcnRpZmljYXRlIG9mIENvbXBsZXRpb24gZm9yIENDTkEgY291cnNlIGJ5IE5UVUMgTGVhcm5p
bmcgSHViIGluIFNpbmdhcG9yZS4NCg0KNiBKYW4gMjAxOSB0byAzIEZlYiAyMDE5OiBBdHRlbmRl
ZCBDZXJ0aWZpZWQgSW5mb3JtYXRpb24gU3lzdGVtIFNlY3VyaXR5IFByb2Zlc3Npb25hbCAoQ0lT
U1ApIGNvdXJzZSBhdCBOVFVDIExlYXJuaW5nIEh1YiBpbiBTaW5nYXBvcmUuIEF3YXJkZWQgQ2Vy
dGlmaWNhdGUgb2YgQ29tcGxldGlvbiBmb3IgQ0lTU1AgY291cnNlIGJ5IE5UVUMgTGVhcm5pbmcg
SHViIGluIFNpbmdhcG9yZS4NCg0KLS0tLS1FTkQgTlRVQyBMRUFSTklORyBIVUItLS0tLQ0KDQpX
aGVuIHlvdSBiZWNvbWUgYSBUYXJnZXRlZCBJbmRpdmlkdWFsLCB0aGUgZ292ZXJubWVudCB3aWxs
IGF0dGFjayB5b3Ugb24gYWxsIGZyb250cywgYWNjb3JkaW5nIHRvIG1pbGxpb25zIG9mIFRhcmdl
dGVkIEluZGl2aWR1YWxzIGFsbCBvdmVyIHRoZSB3b3JsZC4NCg0KLS0tLS1CRUdJTiBTRUNUSU9O
IEEtLS0tLQ0KDQpUaGUgZmlyc3QgdGhpbmcgdGhlIGdvdmVybm1lbnQgd2lsbCBhdHRhY2sgeW91
IG9uIGlzIHlvdXIgaGVhbHRoLg0KDQpQbGVhc2UgcmVhZCB0aGUgTGVhcm5pbmcgR3VpZGUgLyBS
ZWZlcmVuY2UgQm9vayAvIEhhbmRib29rIC8gTWFudWFsIC8gVGV4dGJvb2sgZm9yIFRhcmdldGVk
IEluZGl2aWR1YWxzIHB1Ymxpc2hlZCBieSBUYXJnZXRlZCBJbmRpdmlkdWFscyBFdXJvcGUgKG9y
IFRhcmdldGVkIEluZGl2aWR1YWxzIGluIEV1cm9wZWFuIENvdW50cmllcykuIFRoZSBsaW5rIGlz
IGh0dHBzOi8vdGFyZ2V0ZWRpbmRpdmlkdWFsc2V1cm9wZS53b3JkcHJlc3MuY29tL3RpLXN5bXB0
b21zLw0KDQpMZXQncyBsb29rIGF0IFNpbmdhcG9yZWFuIE1yLiBDaGVvbmcgV2VpIENoYW5nLCB3
aG8gc3VlZCBTaW5nYXBvcmUgUHJpbWUgTWluaXN0ZXIgTGVlIEhzaWVuIExvb25nIGluIHRoZSBT
dXByZW1lIENvdXJ0IGluIFNpbmdhcG9yZSBmb3IgKmdvdmVybm1lbnQtaW5kdWNlZCBoZWFsdGgg
cHJvYmxlbXMqIGFuZCBmYWlsZWQgam9iIGludGVydmlld3MuIEhlIGNsYWltZWQgdGhhdCB0aGUg
cHJpbWUgbWluaXN0ZXIgbWFkZSBoaW0gc2hpdCBibG9vZC4NCg0KSGVyZSBhcmUgMyBuZXdzIGFy
dGljbGVzIG9uIFNpbmdhcG9yZWFuIE1yLiBDaGVvbmcgV2VpIENoYW5nLg0KDQpbMDAxXSBOZXdz
IEFydGljbGU6IE1hbidzIHN1aXQgYWdhaW5zdCBMZWUgSHNpZW4gTG9vbmcgYWxsZWdpbmcgd29l
cw0KY2F1c2VkIGJ5IFBNJ3MgJ2RlcGFydG1lbnQnIHRocm93biBvdXQNCk5ld3MgUGxhdGZvcm06
IFlhaG9vISBOZXdzIFNpbmdhcG9yZQ0KTGluazogaHR0cHM6Ly9zZy5uZXdzLnlhaG9vLmNvbS9t
YW5zLXN1aXQtbGVlLWhzaWVuLWxvb25nLWFsbGVnaW5nLXdvZXMtY2F1c2VkLXBtcy1kZXBhcnRt
ZW50LXRocm93bi0xMjQyMTI3NTQuaHRtbA0KDQpbUVVPVEVdIEluIGFsbCwgQ2hlb25nIGVuY2xv
c2VkIHRocmVlIHZvbHVtZXMgb2YgZG9jdW1lbnRzIGNvbXByaXNpbmcNCm1pc2NlbGxhbmVvdXMg
cGhvdG9zIHJlbGF0aW5nIHRvIGEgdmFyaWV0eSBvZiBoaXMgc3VwcG9zZWQgd29lcy4gVGhlDQpw
aG90b3MgYW5kIHRoZWlyIGNhcHRpb25zIHJlbGF0ZWQgdG8gdG9waWNzIHJhbmdpbmcgZnJvbSBm
YWlsZWQgam9iDQppbnRlcnZpZXdzIGFuZCBlcnJvcnMgaW4gZmluYW5jZSB0ZXh0Ym9va3MgdG8g
aGVhbHRoIHByb2JsZW1zLg0KDQouLi5zbmlwcGVkLi4uDQoNCkNoZW9uZyBzYWlkIExlZSDigJxh
bmQvb3IgaGlzIGRlcGFydG1lbnTigJlzIHJlZ3VsYXRpb25zIGNvbmNlcm4gKHNpYykgbXkNCmhl
YWx0aCBhbmQgYWN0aXZpdGllc+KAnSwgYW5kIHRoYXQgTGVlIOKAnGRpZCBub3QgYWRkcmVzcyBt
eSBjb25jZXJucyBvbg0KdGhlIHJlZ3VsYXRpb25zIG9mIGFjdGl2aXRpZXMgd2hlbiBJIGFza2Vk
IGZvciB0aGUgcmVndWxhdGlvbnMgb2YNCmFjdGl2aXRpZXMgdG8gc3RvcOKAnS4gW1VOUVVPVEVd
DQoNClswMDJdIE5ld3MgQXJ0aWNsZTogTWFuIFN1ZXMgUE0gTGVlIEZvciBCbG9vZCBJbiBTdG9v
bHM7IENhc2UgVGhyb3duDQpPdXQgT2YgQ291cnQgVHdpY2UNCk5ld3MgUGxhdGZvcm06IE11c3Rz
aGFyZW5ld3MuY29tDQpMaW5rOiBodHRwczovL211c3RzaGFyZW5ld3MuY29tL2Jsb29kLXN0b29s
cy1wbS1sZWUvDQoNCltRVU9URV0gT2YgYmxvb2R5IHN0b29scyAmIGZhaWxlZCBpbnRlcnZpZXdz
DQoNCi4uLnNuaXBwZWQuLi4NCg0KVGhlIHNlY29uZCB3YXMgYSBmYWlsZWQgam9iIGludGVydmll
dyBhdCBDaXRpYmFuay4gW1VOUVVPVEVdDQoNClswMDNdIE5ld3MgQXJ0aWNsZTogUGxhaW50aWZm
IHRyaWVzIHRvIHN1ZSBMZWUgSHNpZW4gTG9vbmcsIGNsYWltcw0KUHJpbWUgTWluaXN0ZXIgbWFk
ZSBoaW0gc2hpdCBibG9vZA0KTmV3cyBQbGF0Zm9ybTogVGhlIEluZGVwZW5kZW50IFNpbmdhcG9y
ZQ0KTGluazogaHR0cDovL3RoZWluZGVwZW5kZW50LnNnL3BsYWludGlmZi10cmllcy10by1zdWUt
bGVlLWhzaWVuLWxvb25nLWNsYWltcy1wcmltZS1taW5pc3Rlci1tYWRlLWhpbS1zaGl0LWJsb29k
Lw0KDQpbUVVPVEVdIEEgbG9jYWwgbWFuIGhhcyBmYWlsZWQgaW4gaGlzIGF0dGVtcHQgdG8gc3Vl
IFNpbmdhcG9yZSBQcmltZQ0KTWluaXN0ZXIgTGVlIEhzaWVuIExvb25nIGZvciBpbXBvc2luZyDi
gJxyZWd1bGF0aW9uc+KAnSBvbiBoaXMgbGlmZSB0aGF0DQpzZWVtcyB0byBoYW1wZXIgdGhlIHBs
YWludGlmZuKAmXMgcXVhbGl0eSBvZiBsaWZlLg0KDQouLi5zbmlwcGVkLi4uDQoNCkluIHRoZSBq
dWRnbWVudCBvbiB0aGUgY2FzZSB0aGF0IHdhcyByZWxlYXNlZCBvbiB0aGUgU3VwcmVtZSBDb3Vy
dOKAmXMNCndlYnNpdGUgbGFzdCBGcmlkYXksIGl0IGFwcGVhcnMgdGhhdCB0aGUgbWFuLCBNciBD
aGVvbmcgV2VpIENoYW5nLA0KdHJpZWQgdG8gc3VlIFBNIExlZSBpbiBoaXMgY2FwYWNpdHkgYXMg
dGhlIGhlYWQgb2YgR292ZXJubWVudCBmb3INCmltcG9zaW5nIOKAnHJlZ3VsYXRpb25zIG9mIGFj
dGl2aXRpZXPigJ0gb24gaGltIHRoYXQg4oCcY29uY2VybiBteSBoZWFsdGgNCmFuZCBhY3Rpdml0
aWVzLuKAnQ0KDQouLi5zbmlwcGVkLi4uDQoNClJldmVhbGluZyB0aGF0IHRoZSB2b2x1bWVzIHBv
aW50ZWQgdG8gYSB3aWRlIHZhcmlldHkgb2YgdG9waWNzIHN1Y2ggYXMNCmZhaWxlZCBqb2IgaW50
ZXJ2aWV3cywgaGVhbHRoIGlzc3VlcyBhbmQgZXJyb3JzIGluIGZpbmFuY2UgdGV4dGJvb2tzLA0K
anVkaWNpYWwgY29tbWlzc2lvbmVyIFZhbGVyaWUgVGhlYW4gcHJvdmlkZWQgdGhyZWUgZXhhbXBs
ZXMgb2YgdGhlDQppc3N1ZXMgTXIgQ2hlb25nIGF0dHJpYnV0ZWQgdG8gUE0gTGVlLCBpbiB0aGUg
anVkZ21lbnQuIFtVTlFVT1RFXQ0KDQpJIGFtIG9mIHRoZSBvcGluaW9uIHRoYXQgU2luZ2Fwb3Jl
YW4gTXIuIENoZW9uZyBXZWkgQ2hhbmcgaXMgYWxzbyBhIFRhcmdldGVkIEluZGl2aWR1YWwuDQoN
CkNvbWluZyBiYWNrIHRvIG15c2VsZi4gSSBoYXZlIHNvIG1hbnkgbWVkaWNhbCBwcm9ibGVtcyBh
dCA0MSB5ZWFycyBvbGQuIEhlcmUgaXMgdGhlIGxpc3Q6DQoNCigxKSBtZW1vcnkgcHJvYmxlbXMN
Cg0KKDIpIGV5ZSBwcm9ibGVtcw0KDQooMykgbWlsZCwgcmFuZG9tLCBhbmQgaW50ZXJtaXR0ZW50
IGNocm9uaWMgY2hlc3QgcGFpbiBmb3IgMTAgeWVhcnMsIHNpbmNlIGFib3V0IDIwMDkgaSB0aGlu
aw0KDQooNCkgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChJQlMpDQoNCig1KSBudXRyaXRpb25h
bCBkZWZpY2llbmN5IGRpc29yZGVyDQoNCig2KSBoaWdoIGNob2xlc3Rlcm9sDQoNCig3KSBoaWdo
IHRyaWdseWNlcmlkZXMNCg0KKDgpIGRpYWJldGVzIG1lbGxpdHVzDQoNCig5KSBib3JkZXJsaW5l
IGJsb29kIHByZXNzdXJlDQoNCigxMCkgb3N0ZW9hcnRocml0aXMgb2YgYm90aCBrbmVlcyAoZGVn
ZW5lcmF0aW9uIG9yIHdlYXIgYW5kIHRlYXIgb2Yga25lZSBqb2ludHMpIA0KDQooMTEpIGVjemVt
YSBvbiBib3RoIGZlZXQNCg0KTG9va2luZyBhdCB0aGUgY2FzZXMgb2YgU2luZ2Fwb3JlYW4gTXIu
IENoZW9uZyBXZWkgQ2hhbmcgYW5kIGFsc28gU2luZ2Fwb3JlYW4gTXIuIEdpbGJlcnQgTG91aXMs
IEkgYW0gd29uZGVyaW5nIGlmIGFsbCBvZiB0aGUgYWJvdmUgbWVkaWNhbCBwcm9ibGVtcyB3ZXJl
IGluZHVjZWQgYnkgdGhlIFNpbmdhcG9yZSBHb3Zlcm5tZW50IGNvdmVydGx5LiBJIGFtIHN1c3Bl
Y3RpbmcgdGhhdCB0aGUgU2luZ2Fwb3JlIEdvdmVybm1lbnQgY292ZXJ0bHkgZ2F2ZSBtZSBzbyBt
YW55IG1lZGljYWwgcHJvYmxlbXMuDQoNClJlZmVycmluZyB0byBvc3Rlb2FydGhyaXRpcyBvZiBi
b3RoIGtuZWVzLCBpcyB0aGUgU2luZ2Fwb3JlIEdvdmVybm1lbnQgdHJ5aW5nIHRvIGhhbmRpY2Fw
IG1lIHNvIHRoYXQgSSBjYW5ub3QgZXZlbiB3b3JrIGluIG1lZGlvY3JlIGxvdy1wYXlpbmcgcGFy
dCB0aW1lIGFuZCB0ZW1wb3Jhcnkgam9icyBpbiBTaW5nYXBvcmUgYW5kIHRyYXZlbCBvdXQgb2Yg
U2luZ2Fwb3JlPyBNb3N0IHBlb3BsZSBkZXZlbG9wIG9zdGVvYXJ0aHJpdGlzIG9mIGJvdGgga25l
ZXMgaW4gdGhlIGxhdGUgNTBzLCA2MHMsIDcwcyBhbmQgODBzLiBJIGhhdmUgb3N0ZW9hcnRocml0
aXMgdG9vIGVhcmx5IGF0IDQxIHllYXJzIG9sZC4NCg0KTm90IGZvcmdldHRpbmcgU2luZ2Fwb3Jl
YW4gTXIuIEdpbGJlcnQgTG91aXMsIGhlIGNsYWltZWQgdGhhdCB0aGUgU2luZ2Fwb3JlIEdvdmVy
bm1lbnQgbWFkZSBoaW0gc3VmZmVyIGZpdmUgaGVhcnQgYXR0YWNrcy4gQW5kIG9mIGNvdXJzZSBT
aW5nYXBvcmVhbiBNci4gR2lsYmVydCBMb3VpcyBpcyBhIFRhcmdldGVkIEluZGl2aWR1YWwgYXMg
d2VsbC4NCg0KUGxlYXNlIHJlYWQgdGhlIExlYXJuaW5nIEd1aWRlIC8gUmVmZXJlbmNlIEJvb2sg
LyBIYW5kYm9vayAvIE1hbnVhbCAvIFRleHRib29rIGZvciBUYXJnZXRlZCBJbmRpdmlkdWFscyBw
dWJsaXNoZWQgYnkgVGFyZ2V0ZWQgSW5kaXZpZHVhbHMgRXVyb3BlIChvciBUYXJnZXRlZCBJbmRp
dmlkdWFscyBpbiBFdXJvcGVhbiBDb3VudHJpZXMpLiBUaGUgbGluayBpcyBodHRwczovL3Rhcmdl
dGVkaW5kaXZpZHVhbHNldXJvcGUud29yZHByZXNzLmNvbS90aS1zeW1wdG9tcy8NCg0KLS0tLS1F
TkQgU0VDVElPTiBBLS0tLS0NCg0KLS0tLS1CRUdJTiBTRUNUSU9OIEItLS0tLQ0KDQpUaGUgc2Vj
b25kIHRoaW5nIHRoZSBnb3Zlcm5tZW50IHdpbGwgYXR0YWNrIHlvdSBvbiBpcyB5b3VyIGVtcGxv
eW1lbnQsIGFjY29yZGluZyB0byBtaWxsaW9ucyBvZiBUYXJnZXRlZCBJbmRpdmlkdWFscyBhbGwg
b3ZlciB0aGUgd29ybGQuDQoNClBsZWFzZSByZWFkIHRoZSBMZWFybmluZyBHdWlkZSAvIFJlZmVy
ZW5jZSBCb29rIC8gSGFuZGJvb2sgLyBNYW51YWwgLyBUZXh0Ym9vayBmb3IgVGFyZ2V0ZWQgSW5k
aXZpZHVhbHMgcHVibGlzaGVkIGJ5IFRhcmdldGVkIEluZGl2aWR1YWxzIEV1cm9wZSAob3IgVGFy
Z2V0ZWQgSW5kaXZpZHVhbHMgaW4gRXVyb3BlYW4gQ291bnRyaWVzKS4gVGhlIGxpbmsgaXMgaHR0
cHM6Ly90YXJnZXRlZGluZGl2aWR1YWxzZXVyb3BlLndvcmRwcmVzcy5jb20vdGktc3ltcHRvbXMv
DQoNCkNvdmVydGx5IGFuZCBzdWJ0bGVseSwgZ292ZXJubWVudHMgZG8gbm90IGFsbG93IFRhcmdl
dGVkIEluZGl2aWR1YWxzIHRvIGhhdmUgc3VzdGFpbmFibGUgZW1wbG95bWVudC4NCg0KTWlsbGlv
bnMgb2YgVGFyZ2V0ZWQgSW5kaXZpZHVhbHMgYWxsIG92ZXIgdGhlIHdvcmxkIHJlcG9ydCBmcmVx
dWVudCB0ZXJtaW5hdGlvbiBmcm9tIGVtcGxveW1lbnQgb3IgZnJlcXVlbnRseSBmb3JjZWQgdG8g
cmVzaWduLg0KDQpJIGFtIG5vIGV4Y2VwdGlvbi4gRm9yIHRoZSBwYXN0IDEzIHllYXJzIGFmdGVy
IGdyYWR1YXRpbmcgZnJvbSBOYXRpb25hbCBVbml2ZXJzaXR5IG9mIFNpbmdhcG9yZSBpbiAyMDA3
LCBJIGhhdmUgZXh0cmVtZWx5IGxpdHRsZSBlbXBsb3ltZW50IGhpc3RvcnkuIEZvciB0aGUgcGFz
dCAxMyB5ZWFycyBhZnRlciBncmFkdWF0aW5nIGZyb20gTmF0aW9uYWwgVW5pdmVyc2l0eSBvZiBT
aW5nYXBvcmUgaW4gMjAwNywgSSB3YXMgZXh0cmVtZWx5IHVuZGVyLWVtcGxveWVkIGFuZCB1bmRl
ci1hY2hpZXZlZC4gRm9yIHRoZSBwYXN0IDEzIHllYXJzIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSBO
YXRpb25hbCBVbml2ZXJzaXR5IG9mIFNpbmdhcG9yZSBpbiAyMDA3LCBJIHdhcyBGUkVRVUVOVExZ
IHRlcm1pbmF0ZWQgZnJvbSBlbXBsb3ltZW50IG9yIGZvcmNlZCB0byByZXNpZ24uDQoNCkNvdmVy
dGx5IGFuZCBzdWJ0bGVseSwgZ292ZXJubWVudHMgZG8gbm90IGFsbG93IFRhcmdldGVkIEluZGl2
aWR1YWxzIHRvIGhhdmUgc3VzdGFpbmFibGUgZW1wbG95bWVudC4NCg0KQXQgNDEgeWVhcnMgb2xk
IG5vdywgbXkgdG90YWwgQ1BGIHNhdmluZ3MgaXMgb25seSBhcHByb3hpbWF0ZWx5IFNHRCQ2Niww
MDAgKGFzIGF0IDEwIE5vdiAyMDE5IFN1bmRheSkuIEluIGNvbnRyYXN0LCBTaW5nYXBvcmVhbiBN
ci4gR2VyYWxkIFRhbiBoYXMgc29tZSBTR0QkNzAwLDAwMCBpbiBoaXMgQ1BGIGFjY291bnQuIE1v
c3Qgb2YgdGhlIGF2ZXJhZ2UgcGVvcGxlIGF0IG15IGFnZSBub3cgd291bGQgaGF2ZSBBVCBMRUFT
VCBTR0QkMzAwLDAwMCB0byBTR0QkNDAwLDAwMCBpbiB0aGVpciBDUEYgYWNjb3VudHMuIE15IGV4
dHJlbWVseSBsb3cgQ1BGIHNhdmluZ3Mgb2YgYWJvdXQgU0dEJDY2LDAwMCBpcyBhIHRlc3RhbWVu
dCB0byB0aGUgZmFjdCB0aGF0IEkgaGF2ZSB2ZXJ5IGxpdHRsZSBlbXBsb3ltZW50IGhpc3Rvcnkg
Zm9yIHRoZSBwYXN0IDEzIHllYXJzIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSBOYXRpb25hbCBVbml2
ZXJzaXR5IG9mIFNpbmdhcG9yZSBpbiAyMDA3LiBUaGUgU2luZ2Fwb3JlIEdvdmVybm1lbnQgc2lt
cGx5IGRvIG5vdCBhbGxvdyBtZSB0byBoYXZlIHN1c3RhaW5hYmxlIGVtcGxveW1lbnQuDQoNCkdv
dmVybm1lbnRzIGFsc28gZG8gbm90IGFsbG93IFRhcmdldGVkIEluZGl2aWR1YWxzIHRvIGJlIGZp
bmFuY2lhbGx5IGluZGVwZW5kZW50IGFuZCBlYXJuIGEgbG90IG9mIG1vbmV5Lg0KDQpTb21ldGlt
ZSBhZ28sIFRoZSBTdHJhaXRzIFRpbWVzIHJlcG9ydGVkIHRoYXQgYSBTaW5nYXBvcmVhbiBob3Vz
ZXdpZmUgd2FzIGNoZWF0ZWQgb2Ygc29tZSBTR0QkNzAwLDAwMCAoYWxtb3N0IGEgbWlsbGlvbiBk
b2xsYXJzKS4NCg0KUmVjZW50bHksIFN0b21wIGluIFNpbmdhcG9yZSByZXBvcnRlZCB0aGF0IGEg
U2luZ2Fwb3JlYW4gbWFuIGZsYXVudGVkIFNHRCQzNTQsMDAwIGluIGhpcyBQT1NCIGJhbmsgYWNj
b3VudCB0byBoaXMgRmFjZWJvb2sgZGF0aW5nIHBhcnRuZXIuDQoNCk9uIDggT2N0IDIwMTksIEkg
cGlja2VkIHVwIHNvbWVvbmUncyBVT0IgYmFuayBBVE0gc2xpcCBzaG93aW5nIGEgYmFuayBiYWxh
bmNlIG9mIFNHRCQ2Nyw2NTguDQoNCk9uIDUgTm92IDIwMTkgVHVlc2RheSwgSSBzYXcgYSBDYXVj
YXNpYW4gbWFuIGF0IFRhbiBUb2NrIFNlbmcgSG9zcGl0YWwgaW4gU2luZ2Fwb3JlIHdpdGggU0dE
JDI2NCwwMDAgaW4gaGlzIGJhbmsgYWNjb3VudC4gSSBoYWQgYSBjaGFuY2UgdG8gZ2xpbXBzZSBh
dCB0aGUgc2NyZWVuIG9uIHRoZSBBVE0gbWFjaGluZS4NCg0KSXQgc2VlbXMgdGhhdCBhbG1vc3Qg
ZXZlcnlvbmUgaW4gU2luZ2Fwb3JlIGlzIGEgbG90IGEgbG90IHJpY2hlciB0aGFuIG1lIHdoaWxl
IEkgbGl2ZSBpbiBleHRyZW1lIHBvdmVydHkgaW4gU2luZ2Fwb3JlLg0KDQpJbiBzdGFyayBjb250
cmFzdCwgbXkgcGVyc29uYWwgc2F2aW5ncyBpcyBtZWRpb2NyZSBhbmQgaW5zaWduaWZpY2FudC4g
QXMgb2YgMTAgTm92ZW1iZXIgMjAxOSBTdW5kYXksIEkgaGF2ZSBMRVNTIFRIQU4gU0dEJDE4MDAg
aW4gbXkgYmFuayBhY2NvdW50cy4gSSBjYW4gYmFyZWx5IHN1cnZpdmUgMyBtb250aHMgd2l0aCBM
RVNTIFRIQU4gU0dEJDE4MDAgcGVyc29uYWwgc2F2aW5ncy4NCg0KQXQgNDEgeWVhcnMgb2xkIG5v
dywgSSBkbyBub3QgZXZlbiBvd24gYSBIREIgZmxhdCEgVGhlIGV4dHJlbWVseSBsb3cgaW5jb21l
IGdyb3VwIGluIFNpbmdhcG9yZSBsaXZlcyBpbiB0aGUgbW9zdCBiYXNpYyBIREIgMy1yb29tIGZs
YXRzLiBCdXQgSSBkbyBub3QgZXZlbiBvd24gYSBIREIgMy1yb29tIGZsYXQhIEkgYW0gbm93IGxp
dmluZyBpbiBhIEhEQiAxLXJvb20gcmVudGFsIGZsYXQgKHdoaWNoIEkgZG8gbm90IG93biBvYnZp
b3VzbHkpIG1lYW50IGZvciB0aGUgZXh0cmVtZWx5IHBvb3IgaW4gU2luZ2Fwb3JlLiBJIGxpdmUg
aW4gRVhUUkVNRSBQT1ZFUlRZIGluIFNpbmdhcG9yZS4NCg0KQmVzaWRlcyBub3Qgb3duaW5nIGFu
eSByZXNpZGVudGlhbCBwcm9wZXJ0eSwgSSBhbHNvIGRvIG5vdCBoYXZlIGFueSBjYXIuIEluIGFk
ZGl0aW9uLCBJIGhhdmUgbmV2ZXIgaGFkIGFueSBjcmVkaXQgY2FyZHMgZm9yIHRoZSBwYXN0IDQx
IHllYXJzIG9mIG15IGxpZmUuDQoNCkkgbGl2ZSBpbiBFWFRSRU1FIFBPVkVSVFkgaW4gU2luZ2Fw
b3JlIGFuZCBJIHNpbXBseSBsb3ZlIHRvIGZsYXVudCBteSBwb3ZlcnR5ISBJIGFtIHN0aWxsIFNU
UlVHR0xJTkcgdG8gZmluZCBtZWRpb2NyZSBsb3ctcGF5aW5nIHBhcnQgdGltZSBhbmQgdGVtcG9y
YXJ5IGpvYnMgaW4gU2luZ2Fwb3JlIHRvIGZlZWQgbXlzZWxmIHdoaWxlIGEgZm9yZWlnbiBleHBh
dHJpYXRlIGZyb20gSW5kaWEsIHdobyBpcyBhIG1hbmFnZXIgZGlyZWN0b3IgaW4gSlAgTW9yZ2Fu
IGluIFNpbmdhcG9yZSwgZWFybnMgU0dEJDY2LDMzMyBwZXIgbW9udGguIEkgYW0gU1RSVUdHTElO
RyB0byBlYXJuIFNHRCQ3IHRvIFNHRCQxNSBwZXIgaG91ciBpbiBtZWRpb2NyZSBsb3ctcGF5aW5n
IHBhcnQgdGltZSBhbmQgdGVtcG9yYXJ5IGpvYnMgaW4gU2luZ2Fwb3JlLiBJIGhlYXJkIHRoYXQg
dGhlIGZvcmVpZ24gZXhwYXQgd2hvIGVhcm5zIFNHRCQ2NiwzMzMgcGVyIG1vbnRoIGluIFNpbmdh
cG9yZSBvbmx5IGhhcyBhIHVuaXZlcnNpdHkgZGVncmVlIGZyb20gSHVsbCBVbml2ZXJzaXR5LiBJ
dCBzZWVtcyB0aGF0IEh1bGwgVW5pdmVyc2l0eSBpcyByYW5rZWQgNTAwdGggdG8gNjAwdGggaW4g
dGhlIHdvcmxkIHdoaWxlIEkgaGF2ZSBhIHVuaXZlcnNpdHkgZGVncmVlIGZyb20gdGhlIE5hdGlv
bmFsIFVuaXZlcnNpdHkgb2YgU2luZ2Fwb3JlIHdpdGggMiBwb2x5dGVjaG5pYyBkaXBsb21hcyEN
Cg0KVGhlcmVmb3JlLCBHb3Zlcm5tZW50cyBkbyBub3QgYWxsb3cgVGFyZ2V0ZWQgSW5kaXZpZHVh
bHMgdG8gYmUgZmluYW5jaWFsbHkgaW5kZXBlbmRlbnQgYW5kIGVhcm4gYSBsb3Qgb2YgbW9uZXku
DQoNCk1vc3QgU2luZ2Fwb3JlYW5zIHRyYXZlbCBvdmVyc2VhcyAqZnJlcXVlbnRseSBldmVyeSB5
ZWFyKiBidXQgSSBoYXZlIG9ubHkgbWFkZSBhIE1FRElPQ1JFIG51bWJlciBvZiBvdmVyc2VhcyB0
cmlwcyBmb3IgdGhlIHBhc3QgNDEgeWVhcnMgb2YgbXkgbGlmZS4NCg0KTWFueSBwaG90b2dyYXBo
ZXJzIGluIFNpbmdhcG9yZSBhcmUgYWJsZSB0byBzcGVuZCBhdCBsZWFzdCBTR0QkNTAwIHRvIFNH
RCQ2MDAgZXZlcnkgbW9udGggaW4gam9pbmluZyBvcmdhbml6ZWQgbW9kZWwgcGhvdG9zaG9vdHMg
d2hpbGUgSSBjYW4gb25seSBzcGVuZCBTR0QkNjAgdG8gU0dEJDcwIGV2ZXJ5IDMgb3IgNCBtb250
aHMgb3IgcGVyaGFwcyBldmVuIGxvbmdlci4gDQoNCkF0IG15IGFnZSwgd2l0aCBteSBlZHVjYXRp
b24sIGNhbGliZXIgYW5kIGluZm9jb21tcyB0ZWNobm9sb2d5IChJQ1QpIHNraWxsc2V0LCBJIHNo
b3VsZCBiZSBhYmxlIHRvIGVhcm4gYXQgbGVhc3QgU0dEJDkwMDAgcGVyIG1vbnRoIGFzIG1hbmFn
ZXIsIHNlbmlvciBtYW5hZ2VyLCBvciBkaXJlY3Rvci4gQnV0IEkgbGl2ZSBpbiBleHRyZW1lIHBv
dmVydHkgaW4gU2luZ2Fwb3JlLg0KDQpTaW5jZSA1IERlY2VtYmVyIDIwMTgsIEkgaGF2ZSBhdHRl
bmRlZCAyMiBGQUlMRUQgam9iIGludGVydmlld3Mgc28gZmFyLiBBdCBteSBtb3N0IHJlY2VudCAy
Mm5kIGpvYiBpbnRlcnZpZXcgYXQgSENMIEluc3lzIFB0ZSBMdGQgb24gNiBOb3YgMjAxOSBXZWRu
ZXNkYXksIEkgdG9sZCB0aGUgaW50ZXJ2aWV3ZXIgTXIuIFJhanUgdGhhdCBteSBhcHBsaWNhdGlv
biBmb3IgVG9wIFNlY3JldCBzZWN1cml0eSBjbGVhcmFuY2Ugd2FzIHJlamVjdGVkIDEzIHllYXJz
IGFnbyBpbiAyMDA3IHdoaWxlIEkgd2FzIHdvcmtpbmcgZm9yIERTVEEuIE1yLiBSYWp1IHRvbGQg
bWUgdGhhdCB0aGVyZSdzIGEgdmVyeSBoaWdoIGNoYW5jZSB0aGF0IG15IGFwcGxpY2F0aW9uIGZv
ciBzZWN1cml0eSBjbGVhcmFuY2Ugd291bGQgYmUgcmVqZWN0ZWQgYWdhaW4gc2hvdWxkIEkgd2Fu
dCB0byB3b3JrIGZvciBIQ0wgSW5zeXMgUHRlIEx0ZCBhcyBhIERlc2t0b3AgU3VwcG9ydCBFbmdp
bmVlciBMZXZlbCAyLiBIZSBzYXlzIHRoYXQgbXkgcmVjb3JkcyBhdCBNU0Qgb3IgSVNEIHdvdWxk
IG5vdCBnbyBhd2F5IGluIDUsIDEwIG9yIGV2ZW4gNTAgeWVhcnMuIE1yLiBSYWp1IGZyYW5rbHkg
dG9sZCBtZSBub3QgdG8gd2FzdGUgbXkgdGltZSBhcHBseWluZyBmb3IgZ292ZXJubWVudCBqb2Jz
IHdoaWNoIHJlcXVpcmUgc2VjdXJpdHkgY2xlYXJhbmNlIGFzIEkgd291bGQgbmV2ZXIgYmUgc3Vj
Y2Vzc2Z1bC4gSGUgYWR2aXNlZCBtZSB0byB0ZWxsIHJlY3J1aXRtZW50IGNvbnN1bHRhbnRzIGZy
b20gcmVjcnVpdG1lbnQgYWdlbmNpZXMgdGhhdCBJIGFtIG5vdCBpbnRlcmVzdGVkIGluIGdvdmVy
bm1lbnQgam9icyBpbiBTaW5nYXBvcmUgd2hpY2ggcmVxdWlyZSBzZWN1cml0eSBjbGVhcmFuY2Uu
IEhDTCBJbnN5cyBQdGUgTHRkIHdvcmtzIGNsb3NlbHkgd2l0aCB0aGUgR292ZXJubWVudCBvZiBT
aW5nYXBvcmUgaW4gZ292ZXJubWVudCBwcm9qZWN0cy4NCg0KWW91IGNhbiBhbHNvIHJlYWQgbXkg
YmxvZyBwb3N0aW5ncyAiRmFjdHMgaW4gdGhlIFNpbmdhcG9yZSBQb2xpdGljYWwgQ29udGV4dCIg
YXQgDQoNCmh0dHA6Ly90ZHRlbWNlcnRzLmJsb2dzcG90LmNvbS8yMDE5LzA3L2ZhY3RzLWluLXNp
bmdhcG9yZS1wb2xpdGljYWwtY29udGV4dC5odG1sDQoNCmh0dHBzOi8vdGR0ZW1jZXJ0cy53b3Jk
cHJlc3MuY29tLzIwMTkvMDcvMTYvZmFjdHMtaW4tdGhlLXNpbmdhcG9yZS1wb2xpdGljYWwtY29u
dGV4dC8NCg0KVGhlcmVmb3JlLCBHb3Zlcm5tZW50cyBkbyBub3QgYWxsb3cgVGFyZ2V0ZWQgSW5k
aXZpZHVhbHMgdG8gYmUgZmluYW5jaWFsbHkgaW5kZXBlbmRlbnQgYW5kIGVhcm4gYSBsb3Qgb2Yg
bW9uZXkuDQoNClBsZWFzZSByZWFkIHRoZSBMZWFybmluZyBHdWlkZSAvIFJlZmVyZW5jZSBCb29r
IC8gSGFuZGJvb2sgLyBNYW51YWwgLyBUZXh0Ym9vayBmb3IgVGFyZ2V0ZWQgSW5kaXZpZHVhbHMg
cHVibGlzaGVkIGJ5IFRhcmdldGVkIEluZGl2aWR1YWxzIEV1cm9wZSAob3IgVGFyZ2V0ZWQgSW5k
aXZpZHVhbHMgaW4gRXVyb3BlYW4gQ291bnRyaWVzKS4gVGhlIGxpbmsgaXMgaHR0cHM6Ly90YXJn
ZXRlZGluZGl2aWR1YWxzZXVyb3BlLndvcmRwcmVzcy5jb20vdGktc3ltcHRvbXMvDQoNCi0tLS0t
RU5EIFNFQ1RJT04gQi0tLS0tDQoNCi0tLS0tQkVHSU4gU0VDVElPTiBDLS0tLS0NCg0KVGhlIGZp
bmFsIHRvcGljIEkgYW0gZ29pbmcgdG8gdG91Y2ggb24gaXMgdGhhdCB0aGUgU2luZ2Fwb3JlIEdv
dmVybm1lbnQgaXMgYWxzbyB0cnlpbmcgdG8gcHJldmVudCBtZSBmcm9tIGVuam95aW5nIG15IGhv
YmJ5LiBJIGFtIGEgaG9iYnlpc3QgcGhvdG9ncmFwaGVyIGFuZCB2aWRlb2dyYXBoZXIgd2hvIGxv
dmVzIHRvIHRha2UgcGhvdG9zIGFuZCB2aWRlb3Mgb2Ygc2hvdyBnaXJscywgbW9kZWxzLCB0YWxl
bnRzLCBjb3NwbGF5ZXJzIGFuZCBjZWxlYnJpdGllcyBpbiBjYXIgc2hvd3MsIHRlY2ggc2hvd3Ms
IHRyYWRlIHNob3dzLCBjb3NwbGF5IGNvbnZlbnRpb25zLCBjZWxlYnJpdGllcyBtZWV0LWFuZC1n
cmVldCBhbmQgb3RoZXIgZXZlbnRzIGluIFNpbmdhcG9yZS4NCg0KV2hlbiB5b3UgYmVjb21lIGEg
VGFyZ2V0ZWQgSW5kaXZpZHVhbCwgb25lIG9mIHRoZSBtb3N0IGNvbW1vbiB0aGluZ3MgdGhlIGdv
dmVybm1lbnQgd2lsbCBkbyB0byB5b3UgaXMgdG8gc3ByZWFkIHJ1bW91cnMgYWJvdXQgeW91LiBH
b3Zlcm5tZW50cyB3aWxsIGxhdW5jaCBydW1vdXItbW9uZ2VyaW5nIGNhbXBhaWducyBhZ2FpbnN0
IFRhcmdldGVkIEluZGl2aWR1YWxzIHdpdGggdGhlIGhlbHAgb2Ygc2VjcmV0IGdvdmVybm1lbnQg
b3BlcmF0aXZlcy4gDQoNClBsZWFzZSByZWFkIHRoZSBMZWFybmluZyBHdWlkZSAvIFJlZmVyZW5j
ZSBCb29rIC8gSGFuZGJvb2sgLyBNYW51YWwgLyBUZXh0Ym9vayBmb3IgVGFyZ2V0ZWQgSW5kaXZp
ZHVhbHMgcHVibGlzaGVkIGJ5IFRhcmdldGVkIEluZGl2aWR1YWxzIEV1cm9wZSAob3IgVGFyZ2V0
ZWQgSW5kaXZpZHVhbHMgaW4gRXVyb3BlYW4gQ291bnRyaWVzKS4gVGhlIGxpbmsgaXMgaHR0cHM6
Ly90YXJnZXRlZGluZGl2aWR1YWxzZXVyb3BlLndvcmRwcmVzcy5jb20vdGktc3ltcHRvbXMvDQoN
CkkgdGhpbmsgdGhlIFNpbmdhcG9yZSBHb3Zlcm5tZW50IGhhcyBzcHJlYWQgc28gbWFueSBydW1v
dXJzIGFib3V0IG1lIHRoYXQgbWFueSBzaG93IGdpcmxzLCBtb2RlbHMsIHRhbGVudHMgYW5kIHNv
bWUgY29zcGxheWVycyBpbiBTaW5nYXBvcmUgZG8gbm90IGFsbG93IG1lIHRvIHRha2UgcGhvdG9z
IGFuZCB2aWRlb3Mgb2YgdGhlbS4NCg0KVGhlIHNlY29uZCByZWFzb24gd2h5IG1hbnkgc2hvdyBn
aXJscywgbW9kZWxzLCB0YWxlbnRzIGFuZCBzb21lIGNvc3BsYXllcnMgaW4gU2luZ2Fwb3JlIHJl
ZnVzZSB0byBsZXQgbWUgdGFrZSBwaG90b3MgYW5kIHZpZGVvcyBvZiB0aGVtIGlzIGJlY2F1c2Ug
dGhlIFNpbmdhcG9yZSBHb3Zlcm5tZW50IGhhZCBwcm9iYWJseSBwYXNzZWQgZG93biBvcmRlcnMg
YW5kIGluc3RydWN0aW9ucyB0byB0aGVtIHRlbGxpbmcgdGhlbSBub3QgdG8gYWxsb3cgbWUgdG8g
dGFrZSBwaG90b3MgYW5kIHZpZGVvcyBvZiB0aGVtLg0KDQpUaGUgdGhpcmQgcmVhc29uIHdoeSBt
YW55IHNob3cgZ2lybHMsIG1vZGVscywgdGFsZW50cyBhbmQgc29tZSBjb3NwbGF5ZXJzIGluIFNp
bmdhcG9yZSByZWZ1c2UgdG8gbGV0IG1lIHRha2UgcGhvdG9zIGFuZCB2aWRlb3Mgb2YgdGhlbSBp
cyBiZWNhdXNlIG9mIHNlbGYtY2Vuc29yc2hpcC4gSXQgaXMgYmVjYXVzZSBJIGFtIGEgVGFyZ2V0
ZWQgSW5kaXZpZHVhbC4gQSBUYXJnZXRlZCBJbmRpdmlkdWFsIGlzIGEgcGVyc29uIHdobyBpcyBw
ZXJzZWN1dGVkLCB0YXJnZXRlZCBhbmQgbWFya2VkIGJ5IHRoZSBnb3Zlcm5tZW50LiBTbyB0aGVz
ZSBzaG93IGdpcmxzLCBtb2RlbHMsIHRhbGVudHMgYW5kIGNvc3BsYXllcnMgYXJlIGFmcmFpZCBv
ZiBoYXZpbmcgcGhvdG9zIGFuZCB2aWRlb3MgdGFrZW4gYnkgbWUuIEluIGEgVGhlIE9ubGluZSBD
aXRpemVuIFNpbmdhcG9yZSAoVE9DU0cpIGFydGljbGUgd2hpY2ggSSBjYW4ndCBzZWVtIHRvIGZp
bmQgbm93LCBhIFNpbmdhcG9yZWFuIG1hbmFnZXIgd2FzIHJlcG9ydGVkIHRvIGJlIHZlcnkgYWZy
YWlkIG9mIHRha2luZyBwaG90b3MgdG9nZXRoZXIgd2l0aCB0aGUgU2luZ2Fwb3JlIERlbW9jcmF0
aWMgUGFydHkgKFNEUCkgY2hhaXJtYW4gUGF1bCBUYW1ieWFoIGFuZCByZXF1ZXN0ZWQgZm9yIHRo
ZXNlIHBob3RvcyB0byBiZSBkZWxldGVkLiBUaGUgU2luZ2Fwb3JlYW4gbWFuYWdlciBjbGFpbWVk
IHRoYXQgaGUgd2FzIGFmcmFpZCBmb3IgaGlzIGZ1dHVyZSBhbmQgd29ycmllZCBhYm91dCBoaXMg
cmljZSBib3dsLiBIZSBpcyBhZnJhaWQgdGhhdCBoZSB3b3VsZCBiZSBtYXJrZWQgYnkgdGhlIFNp
bmdhcG9yZSBHb3Zlcm5tZW50LiBTRFAgaXMgb25lIG9mIHRoZSBtYW55IE9wcG9zaXRpb24gcG9s
aXRpY2FsIHBhcnRpZXMgaW4gU2luZ2Fwb3JlLiBJdCBpcyBhIHdlbGwga25vd24gZmFjdCB0aGF0
IG1pbGxpb25zIG9mIFNpbmdhcG9yZWFucyBhcmUgYWZyYWlkIG9mIHRha2luZyBwaG90b3MgdG9n
ZXRoZXIgd2l0aCBPcHBvc2l0aW9uIHBvbGl0aWNhbCBmaWd1cmVzIGZvciBmZWFyIG9mIGJlaW5n
IG1hcmtlZCBieSB0aGUgUEFQIGdvdmVybm1lbnQgaW4gU2luZ2Fwb3JlLiBJIGFtIGEgVGFyZ2V0
ZWQgSW5kaXZpZHVhbCwgc28gbmF0dXJhbGx5IG1hbnkgc2hvdyBnaXJscywgbW9kZWxzLCB0YWxl
bnRzIGFuZCBzb21lIGNvc3BsYXllcnMgcHJhY3RpY2VkIHNlbGYtY2Vuc29yc2hpcCwgcmVmdXNp
bmcgdG8gbGV0IG1lIHRha2UgcGhvdG9zIGFuZCB2aWRlb3Mgb2YgdGhlbS4NCg0KVGhlIGxhc3Qg
cmVhc29uIHdoeSBtYW55IHNob3cgZ2lybHMsIG1vZGVscywgdGFsZW50cyBhbmQgc29tZSBjb3Nw
bGF5ZXJzIGluIFNpbmdhcG9yZSByZWZ1c2UgdG8gbGV0IG1lIHRha2UgcGhvdG9zIGFuZCB2aWRl
b3Mgb2YgdGhlbSBpcyBiZWNhdXNlIG9mIG15IGV4dHJlbWUgcG92ZXJ0eSBpbiBTaW5nYXBvcmUu
IEkgaGF2ZSBub3RoaW5nIHRvIG9mZmVyIHRoZW0uDQoNCk91dCBvZiBtaWxsaW9ucyBhbmQgbWls
bGlvbnMgb2YgdmlzaXRvcnMgYW5kIHBob3RvZ3JhcGhlcnMgdG8gY2FyIHNob3dzLCB0ZWNoIHNo
b3dzLCBhbmQgdHJhZGUgc2hvd3MgaW4gU2luZ2Fwb3JlLCBJIGFtIHRoZSBvbmUgYW5kIG9ubHkg
cGVyc29uIHdobyBpcyBub3QgYWxsb3dlZCB0byB0YWtlIHBob3RvcyBhbmQgdmlkZW9zIG9mIHRo
ZSBzaG93IGdpcmxzLCBtb2RlbHMgYW5kIHRhbGVudHMuDQoNCkkgaGF2ZSBuZXZlciBqb2luZWQg
VHJveSBUaGFtIEd1YW5nIFhpb25nJ3Mgb3JnYW5pemVkIG1vZGVsIHBob3Rvc2hvb3RzIGluIFNp
bmdhcG9yZSBiZWZvcmUsIGJ1dCBoZSBoYXMgYmxvY2tlZCBtZSBmcm9tIGpvaW5pbmcgaGlzIG9y
Z2FuaXplZCBtb2RlbCBwaG90b3Nob290cy4gQWN0dWFsbHkgdGhlcmUgaXMgbm8gbmVlZCBmb3Ig
VHJveSBUaGFtIEd1YW5nIFhpb25nIHRvIGJhbiBtZSBmcm9tIGpvaW5pbmcgaGlzIG9yZ2FuaXpl
ZCBtb2RlbCBwaG90b3Nob290cywgYmVjYXVzZSBJIGhhdmUgbm8gbW9uZXkgdG8gam9pbiBoaXMg
b3JnYW5pemVkIG1vZGVsIHBob3Rvc2hvb3RzISBJIGxpdmUgaW4gZXh0cmVtZSBwb3ZlcnR5IGlu
IFNpbmdhcG9yZS4NCg0KLS0tLS1FTkQgU0VDVElPTiBDLS0tLS0NCg0KLS0tLS1CRUdJTiBHVUlO
TkVTUyBXT1JMRCBSRUNPUkRTLS0tLS0NCg0KSSBsaXZlIGluIGV4dHJlbWUgcG92ZXJ0eSBpbiBT
aW5nYXBvcmUuIEkgc2ltcGx5IGxvdmUgdG8gZmxhdW50IG15IHBvdmVydHkhIFRoYXQncyB3aHkg
SSBoYXZlIGFwcGxpZWQgdG8gc2V0IHdvcmxkIHJlY29yZHMgYXQgR3Vpbm5lc3MgV29ybGQgUmVj
b3JkcywgYnV0IHRoZXkgd2VyZSBtb3N0bHkgcmVqZWN0ZWQgcHJvYmFibHkgZHVlIHRvIGluZmx1
ZW5jZSBmcm9tIHRoZSBTaW5nYXBvcmUgR292ZXJubWVudC4NCg0KSGVyZSBpcyB0aGUgbGlzdCBv
ZiB3b3JsZCByZWNvcmRzIHdoaWNoIEkgaGF2ZSBhdHRlbXB0ZWQgdG8gc2V0IGF0IEd1aW5lc3Mg
V29ybGQgUmVjb3Jkcy4NCg0KWzFdIFNpbmdhcG9yZWFuIE1yLiBUdXJyaXRvcHNpcyBEb2hybmlp
IFRlbyBFbiBNaW5nIGlzIHRoZSBPbmx5IFBlcnNvbiBpbiB0aGUgV29ybGQgV2hvIExvdmVzIHRv
IEZsYXVudCBIaXMgUG92ZXJ0eQ0KDQpbMl0gU2luZ2Fwb3JlYW4gTXIuIFR1cnJpdG9wc2lzIERv
aHJuaWkgVGVvIEVuIE1pbmcgaXMgdGhlIFBvb3Jlc3QgVW5pdmVyc2l0eSBHcmFkdWF0ZSBpbiB0
aGUgV29ybGQNCg0KWzNdIFNpbmdhcG9yZWFuIE1yLiBUdXJyaXRvcHNpcyBEb2hybmlpIFRlbyBF
biBNaW5nIEhhcyB0aGUgTG9uZ2VzdCBOYW1lIGluIHRoZSBXb3JsZA0KDQpbNF0gU2luZ2Fwb3Jl
YW4gVW5pdmVyc2l0eSBHcmFkdWF0ZSBNci4gVHVycml0b3BzaXMgRG9ocm5paSBUZW8gRW4gTWlu
ZyBpcyB0aGUgT25seSBQZXJzb24gaW4gdGhlIFdvcmxkIFdobyBMaWtlcyB0byBGbGF1bnQgSGlz
IFBvdmVydHkNCg0KLS0tLS1FTkQgR1VJTk5FU1MgV09STEQgUkVDT1JEUy0tLS0tDQoNCi0tLS0t
QkVHSU4gTWFpbnN0cmVhbSBOZXdzcGFwZXIgQXJ0aWNsZXMgb24gVGFyZ2V0ZWQgSW5kaXZpZHVh
bHMtLS0tLQ0KDQooMSkgW1RoZSBOZXcgWW9yayBUaW1lc10gTWljcm93YXZlIFdlYXBvbnMgQXJl
IFByaW1lIFN1c3BlY3QgaW4gSWxscyBvZg0KVS5TLiBFbWJhc3N5IFdvcmtlcnMNCg0KTGluazog
aHR0cHM6Ly93d3cubnl0aW1lcy5jb20vMjAxOC8wOS8wMS9zY2llbmNlL3NvbmljLWF0dGFjay1j
dWJhLW1pY3Jvd2F2ZS5odG1sDQoNCigyKSBbVGhlIE5ldyBZb3JrIFRpbWVzXSBNaWNyb3dhdmUg
V2VhcG9ucyBBcmUgUHJpbWUgU3VzcGVjdCBpbiBJbGxzIG9mDQpVLlMuIEVtYmFzc3kgV29ya2Vy
cw0KDQpMaW5rOiBodHRwczovL3d3dy5ueXRpbWVzLmNvbS8yMDE4LzA5LzAxL3NjaWVuY2Uvc29u
aWMtYXR0YWNrLWN1YmEtbWljcm93YXZlLmh0bWwNCg0KKDMpIFtUaGUgTmV3IFlvcmsgVGltZXNd
IE1pY3Jvd2F2ZSBXZWFwb25zIEFyZSBQcmltZSBTdXNwZWN0IGluIElsbHMgb2YNClUuUy4gRW1i
YXNzeSBXb3JrZXJzDQoNCkxpbms6IGh0dHBzOi8vd3d3Lm55dGltZXMuY29tLzIwMTgvMDkvMDEv
c2NpZW5jZS9zb25pYy1hdHRhY2stY3ViYS1taWNyb3dhdmUuaHRtbA0KDQooNCkgW1RoZSBXYXNo
aW5ndG9uIFBvc3RdIE1pbmQgR2FtZXMgTmV3IG9uIHRoZSBJbnRlcm5ldDogYSBjb21tdW5pdHkg
b2YgcGVvcGxlIHdobyBiZWxpZXZlIHRoZSBnb3Zlcm5tZW50IGlzIGJlYW1pbmcgdm9pY2VzIGlu
dG8gdGhlaXIgbWluZHMuIFRoZXkgbWF5IGJlIGNyYXp5LCBidXQgdGhlIFBlbnRhZ29uIGhhcyBw
dXJzdWVkIGEgd2VhcG9uIHRoYXQgY2FuIGRvIGp1c3QgdGhhdC4NCg0KTGluazogaHR0cHM6Ly93
d3cud2FzaGluZ3RvbnBvc3QuY29tL2FyY2hpdmUvbGlmZXN0eWxlL21hZ2F6aW5lLzIwMDcvMDEv
MTQvbWluZC1nYW1lcy1zcGFuLWNsYXNzYmFua2hlYWRuZXctb24tdGhlLWludGVybmV0LWEtY29t
bXVuaXR5LW9mLXBlb3BsZS13aG8tYmVsaWV2ZS10aGUtZ292ZXJubWVudC1pcy1iZWFtaW5nLXZv
aWNlcy1pbnRvLXRoZWlyLW1pbmRzLXRoZXktbWF5LWJlLWNyYXp5LWJ1dC10aGUtcGVudGFnb24t
aGFzLXB1cnN1ZWQtYS13ZWFwb24tdGhhdC1jYW4tZG8tanVzdC10aGF0LXNwYW4vYTBkMDlkYjYt
ZDdhYS00ZmNkLWE4MjktMmEzZWJjNTZkZjlkLz91dG1fdGVybT0uYzY2NmYzM2VkOTMzDQoNCig1
KSBbTmV3IFlvcmsgVGltZXNdIFVuaXRlZCBTdGF0ZXMgb2YgUGFyYW5vaWE6IFRoZXkgU2VlIEdh
bmdzIG9mIFN0YWxrZXJzDQoNCkxpbms6IGh0dHBzOi8vd3d3Lm55dGltZXMuY29tLzIwMTYvMDYv
MTEvaGVhbHRoL2dhbmctc3RhbGtpbmctdGFyZ2V0ZWQtaW5kaXZpZHVhbHMuaHRtbA0KDQooNikg
W1dJUkVEXSBNaW5kIEdhbWVzOiBUaGUgVG9ydHVyZWQgTGl2ZXMgb2Yg4oCYVGFyZ2V0ZWQgSW5k
aXZpZHVhbHPigJkNCg0KTGluazogaHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L21pbmQtZ2Ft
ZXMtdGhlLXRvcnR1cmVkLWxpdmVzLW9mLXRhcmdldGVkLWluZGl2aWR1YWxzLw0KDQotLS0tLUVO
RCBNYWluc3RyZWFtIE5ld3NwYXBlciBBcnRpY2xlcyBvbiBUYXJnZXRlZCBJbmRpdmlkdWFscy0t
LS0tDQoNCkxpc3Qgb2YgTmV3cyBBcnRpY2xlcyBvbiBUZW8gRW4gTWluZw0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQoNCigxKSBBbHZpbm9sb2d5OiBTaW5nYXBvcmVhbiBH
dXkgQXR0ZW5kcyBUYWl3YW4gYW5kIEphcGFuIEFkdWx0IEV4cG8gVG8gQXBwbHkgRm9yIEpBViBQ
b3JuIEFjdG9yIFJvbGUgLSBUdXJyaXRvcHNpcyBEb2hybmlpDQoNCkxpbms6IGh0dHBzOi8vYWx2
aW5vbG9neS5jb20vMjAxNy8xMS8yNy9zaW5nYXBvcmVhbi1ndXktYXR0ZW5kcy10YWl3YW4tamFw
YW4tYWR1bHQtZXhwby1hcHBseS1qYXYtcG9ybi1hY3Rvci1yb2xlLXR1cnJpdG9wc2lzLWRvaHJu
aWkvDQoNCigyKSBZYWhvbyEgTmV3czogV2hvIGlzIFRlbyBFbiBNaW5nIChUdXJyaXRvcHNpcyBE
b2hybmlpKT8NCg0KTGluazogaHR0cHM6Ly9zZy5uZXdzLnlhaG9vLmNvbS90ZW8tZW4tbWluZy10
dXJyaXRvcHNpcy1kb2hybmlpLTA0MDU1NTQ3MC5odG1sDQoNCigzKSBZYWhvbyEgTmV3czogSmF5
bGV5IFdvbyBkaWQgYSBwYWlkIHRlc3Qgc2hvb3Qgd2l0aCBUdXJyaXRvcHNpcyBEb2hybmlpIFRl
byBFbiBNaW5nIGJlZm9yZSBzaGUgd2FzIGEgTWVkaWFjb3JwIHRhbGVudA0KDQpMaW5rOiBodHRw
czovL3NnLm5ld3MueWFob28uY29tL2pheWxleS13b28tZGlkLXBhaWQtdGVzdC0xOTA2NTQ0ODEu
aHRtbA0KDQooNCkgQWx2aW5vbG9neTogVHVycml0b3BzaXMgRG9ocm5paSBUZW8gRW4gTWluZyB0
aGlua3MgaGUgaXMgYSB0YXJnZXRlZCBpbmRpdmlkdWFsIGFuZCB0aGF0IHRoZSBTaW5nYXBvcmUg
Z292ZXJubWVudCBpcyBvdXQgdG8gZ2V0IGhpbQ0KDQpMaW5rOiBodHRwczovL2Fsdmlub2xvZ3ku
Y29tLzIwMTcvMTIvMTQvdHVycml0b3BzaXMtZG9ocm5paS10ZW8tZW4tbWluZy10aGlua3MtdGFy
Z2V0ZWQtaW5kaXZpZHVhbC1zaW5nYXBvcmUtZ292ZXJubWVudC1nZXQvDQoNCig1KSBBbHZpbm9s
b2d5OiBUZW8gRW4gTWluZyBFeGNsdXNpdmUgSW50ZXJ2aWV3OiBUaGUgbWFuIGJlaGluZCB0aGUg
J0pBViBQb3JuIEFjdG9yJyBEcmVhbQ0KDQpMaW5rOiBodHRwczovL2Fsdmlub2xvZ3kuY29tLzIw
MTgvMDIvMDYvdGVvLWVuLW1pbmctZXhjbHVzaXZlLWludGVydmlldy1tYW4tYmVoaW5kLWphdi1w
b3JuLWFjdG9yLWRyZWFtLw0KDQooNikgUklDRSBNZWRpYTogVGVvIEVuIE1pbmc6IEFzcGlyaW5n
IEFjdG9yIGFuZCA0MC1ZZWFyIE9sZCBWaXJnaW4NCg0KTGluazogaHR0cDovL3JpY2VtZWRpYS5j
by9jdWx0dXJlLXBlb3BsZS10ZW8tZW4tbWluZy1hc3BpcmluZy1hY3Rvci00MC15ZWFyLW9sZC12
aXJnaW4vDQoNCig3KSBZYWhvbyEgTGlmZXN0eWxlOiBUZW8gRW4gTWluZzogQXNwaXJpbmcgQWN0
b3IgYW5kIDQwLVllYXIgT2xkIFZpcmdpbg0KDQpMaW5rOiBodHRwczovL3NnLnN0eWxlLnlhaG9v
LmNvbS90ZW8tZW4tbWluZy1hc3BpcmluZy1hY3Rvci0wNTU3NTUyNjkuaHRtbA0KDQooOCkgQWx2
aW5vbG9neTogQXNwaXJpbmcgQWR1bHQgRmlsbSBBY3RvciBUZW8gRW4gTWluZyBnb2VzIHRvIFRh
aXdhbiBBZHVsdCBGaWxtIEV4cG8gMjAxOA0KDQpMaW5rOiBodHRwczovL2Fsdmlub2xvZ3kuY29t
LzIwMTgvMDgvMTAvYXNwaXJpbmctYWR1bHQtZmlsbS1hY3Rvci10ZW8tZW4tbWluZy1nb2VzLXRv
LXRhaXdhbi1hZHVsdC1maWxtLWV4cG8tMjAxOC8NCg0KRm9yIGZ1dHVyZSB1cGRhdGVzLCBwbGVh
c2UgdmlzaXQgbXkgUkFJRCAxIG1pcnJvcmluZyByZWR1bmRhbnQgQmxvZ2dlciBhbmQgV29yZHBy
ZXNzIGJsb2dzIGF0DQoNCmh0dHBzOi8vdGR0ZW1jZXJ0cy5ibG9nc3BvdC5jb20vDQoNCmh0dHBz
Oi8vdGR0ZW1jZXJ0cy53b3JkcHJlc3MuY29tLw0KDQpGb3IgbXkgaW50ZXJuYXRpb25hbCBwb3N0
aW5ncywgeW91IGNhbiBzZWFyY2ggdGhlIGZvbGxvd2luZyBpbnRlcm5hdGlvbmFsIGFyY2hpdmVz
Lg0KDQpbMV0gaHR0cHM6Ly9tYXJrbWFpbC5vcmcvDQoNClsyXSBodHRwczovL21hcmMuaW5mby8N
Cg0KWzNdIGh0dHBzOi8vd3d3Lm1haWwtYXJjaGl2ZS5jb20vDQoNCls0XSBodHRwczovL3NlY2xp
c3RzLm9yZy8NCg0KWzVdIGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9ydW0vIyFvdmVydmll
dw0KDQoNCg0KDQoNCg0KDQoNCg0KLS0tLS1CRUdJTiBFTUFJTCBTSUdOQVRVUkUtLS0tLQ0KDQpU
aGUgR29zcGVsIGZvciBhbGwgVGFyZ2V0ZWQgSW5kaXZpZHVhbHMgKFRJcyk6DQoNCltUaGUgTmV3
IFlvcmsgVGltZXNdIE1pY3Jvd2F2ZSBXZWFwb25zIEFyZSBQcmltZSBTdXNwZWN0IGluIElsbHMg
b2YNClUuUy4gRW1iYXNzeSBXb3JrZXJzDQoNCkxpbms6wqBodHRwczovL3d3dy5ueXRpbWVzLmNv
bS8yMDE4LzA5LzAxL3NjaWVuY2Uvc29uaWMtYXR0YWNrLWN1YmEtbWljcm93YXZlLmh0bWwNCg0K
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KU2luZ2Fwb3JlYW4gTXIuIFR1
cnJpdG9wc2lzIERvaHJuaWkgVGVvIEVuIE1pbmcncyBBY2FkZW1pYw0KUXVhbGlmaWNhdGlvbnMg
YXMgYXQgMTQgRmViIDIwMTkgYW5kIHJlZnVnZWUgc2Vla2luZyBhdHRlbXB0cyBhdCB0aGUNClVu
aXRlZCBOYXRpb25zIFJlZnVnZWUgQWdlbmN5IEJhbmdrb2sgKDIxIE1hciAyMDE3KSBhbmQgaW4g
VGFpd2FuICg1DQpBdWcgMjAxOSk6DQoNClsxXcKgaHR0cHM6Ly90ZHRlbWNlcnRzLndvcmRwcmVz
cy5jb20vDQoNClsyXcKgaHR0cHM6Ly90ZHRlbWNlcnRzLmJsb2dzcG90LnNnLw0KDQpbM13CoGh0
dHBzOi8vd3d3LnNjcmliZC5jb20vdXNlci8yNzAxMjUwNDkvVGVvLUVuLU1pbmcNCg0KLS0tLS1F
TkQgRU1BSUwgU0lHTkFUVVJFLS0tLS0NCg0K
